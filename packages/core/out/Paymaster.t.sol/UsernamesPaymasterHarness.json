{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FailedToValidatedOp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidConfig",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignatureLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughValueForGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnAuthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COST_OF_POST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REVERT_FINE_CONSTANT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "pair",
          "type": "string"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "debt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "debtee",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        }
      ],
      "name": "decodeContext",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        }
      ],
      "name": "exposed__pack",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "ret",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "exposed__postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "requiredPreFund",
          "type": "uint256"
        }
      ],
      "name": "exposed__validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "fundNode",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "nodeHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nodeToBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nodeToConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "verifyingSigner1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "verifyingSigner2",
          "type": "address"
        },
        {
          "internalType": "enum SigCount",
          "name": "validNumOfSignatures",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "senderNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "primarySigner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "secondarySigner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "sigCount",
          "type": "uint8"
        }
      ],
      "name": "setNodeSigners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToUSDPair",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0346200011f57601f6200285b38819003918201601f19168301916001600160401b03831184841017620001245780849260409485528339810103126200011f576200005a602062000052836200013a565b92016200013a565b60018055600254604051926001600160a01b03908116929091338184167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360808490526001600160a81b0319163360ff60a01b191617600255600080546001600160a01b0319908116909417905560038054909316911617905561270b90816200015082396080518181816102e101528181610a9c0152818161122b01528181611278015281816113010152818161138801528181611415015261174d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200011f5756fe60806040526004361015610013575b600080fd5b60003560e01c806303587c4c1461027f5780630396cb601461027657806317ac89021461026d5780631eafffed146102645780631fbe11f91461025b578063205c2878146102525780632c8da5601461024957806331b3d678146102405780635c975abb146102375780636180deb61461022e578063715018a614610225578063741bef1a1461021c578063796d43711461021357806385c809a41461020a5780638da5cb5b146102015780638e19899e146101f85780639b671bcb146101ef5780639c58ce7a146101e65780639c90b443146101dd5780639dc23b10146101d4578063a9a23409146101cb578063b0d691fe146101c2578063bb9fe6bf146101b9578063c23a5cea146101b0578063c399ec88146101a7578063d0e30db01461019e578063d9d6491014610195578063eb9a2e311461018c578063f0ebdbe914610183578063f2fde38b1461017a5763f465c77e1461017257600080fd5b61000e611701565b5061000e611633565b5061000e6115e4565b5061000e6114ee565b5061000e611485565b5061000e611405565b5061000e611359565b5061000e6112cf565b5061000e61125a565b5061000e611214565b5061000e6111f1565b5061000e6111c4565b5061000e611186565b5061000e6110ea565b5061000e61109a565b5061000e611007565b5061000e610fdd565b5061000e610f84565b5061000e610f3d565b5061000e610f13565b5061000e610eb4565b5061000e610dea565b5061000e610db8565b5061000e610d92565b5061000e610be3565b5061000e610a6a565b5061000e610a02565b5061000e61052c565b5061000e61036e565b5061000e6102b7565b50602036600319011261000e57600435600052600460205260406000208054903482018092116102ac5755005b6102b46119bd565b55005b506000602036600319011261035a5760043563ffffffff8116809103610356576102df6117ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908290823b1561035657602460405180948193621cb65b60e51b8352600483015234905af18015610349575b61033d575080f35b61034690610b17565b80f35b61035161172f565b610335565b5080fd5b80fd5b6001600160a01b0381160361000e57565b503461000e57606036600319011261000e5761043d6004356024356103928161035d565b6044359161043861040a60206103be6103b260005460018060a01b031690565b6001600160a01b031690565b6040805183810189815260208101889052916103e6908290840103601f198101835282610b52565b5190209060405180809581946302571be360e01b8352600483019190602083019252565b03915afa908115610477575b600091610449575b506001600160a01b0316801590811561043f575b50612661565b612668565b005b9050331438610432565b61046a915060203d8111610470575b6104628183610b52565b810190611897565b3861041e565b503d610458565b61047f61172f565b610416565b908161016091031261000e5790565b606060031982011261000e57600435906001600160401b03821161000e576104bd91600401610484565b906024359060443590565b60005b8381106104db5750506000910152565b81810151838201526020016104cb565b90602091610504815180928185528580860191016104c8565b601f01601f1916010190565b9291906105276020916040865260408601906104eb565b930152565b503461000e5761053b36610493565b6101208301915060746105586105518486611a24565b9050611a56565b1080156109f3575b6109e15761058061057a6105748486611a24565b90611a72565b90611b20565b906105c26105bd836105ae61059488611b3d565b6001600160a01b0316600090815260086020526040902090565b90600052602052604060002090565b611b47565b93845182106109cf576105e76105e2846000526007602052604060002090565b611b7d565b9160409283810151916105f983610f72565b61061761060f6106098987611a24565b90611a83565b810190611bbe565b6106426103b261063c6106366106308d8b9e979e611a24565b90611a94565b90611bdf565b60601c90565b916106676106628460018060a01b03166000526006602052604060002090565b611c10565b156109be579061067c89969594939288611a24565b8061068692611aa5565b9a61069383828a8c611812565b6106c6907f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b9265ffffffffffff60d01b9060d01b169065ffffffffffff60a01b9060a01b16179a8b966106f38a611b3d565b956106fd8b611c1a565b8c516bffffffffffffffffffffffff196060998a1b81166020808401919091529890991b90981660348901526048880152606887015260888087019c909c529a855293996001600160a01b03949061075660a88d610b52565b61075f81610f72565b600181036108895750855185166001600160a01b0316158061086c575b61085b5790610795929161078f8a611b3d565b91611c70565b83519092906107ac906001600160a01b03166103b2565b9216918214159283610839575b50508115610830575b50610823575b506107e29394955b516107e6575b50505192839283610510565b0390f35b61081782610812610800846105ae61059461081c98611b3d565b60026000918281558260018201550155565b611b3d565b612554565b38806107d6565b60011794506107e26107c8565b905015386107c2565b0151909150610850906001600160a01b03166103b2565b8114159038806107b9565b89516301d31d0d60e41b8152600490fd5b5085840151610883906001600160a01b03166103b2565b1561077c565b600291929394975061089a81610f72565b146108b1575b5050505050506107e29394956107d0565b845184166001600160a01b03161580156109a1575b61099057906108df92916108d989611b3d565b91611fdb565b83519094919083906108f9906001600160a01b03166103b2565b91169281841415958661096c575b8615610930575b505050505050610924575b3880808080806108a0565b60019490941793610919565b161415935090918361094b575b50505038808080808061090e565b0151909150610962906001600160a01b03166103b2565b141538808061093d565b85840151909650610985906001600160a01b03166103b2565b818716141595610907565b88516301d31d0d60e41b8152600490fd5b50848601516109b8906001600160a01b03166103b2565b156108c6565b87516301d31d0d60e41b8152600490fd5b60405163e5f5a79960e01b8152600490fd5b6040516301d31d0d60e41b8152600490fd5b50619c4060a084013510610560565b503461000e57604036600319011261000e576060600435610a228161035d565b60018060a01b03809116600052600860205260406000206024356000526020526040600020805491600281600184015416920154169060405192835260208301526040820152f35b503461000e576000604036600319011261035a57600435610a8a8161035d565b610a926117ba565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691839190833b15610afc5760449083604051958694859363040b850f60e31b855216600484015260243560248401525af180156103495761033d575080f35b8280fd5b50634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610b2a57604052565b610b32610b00565b604052565b606081019081106001600160401b03821117610b2a57604052565b90601f801991011681019081106001600160401b03821117610b2a57604052565b60405190610b8082610b37565b565b6020906001600160401b038111610b9f575b601f01601f19160190565b610ba7610b00565b610b94565b929192610bb882610b82565b91610bc66040519384610b52565b82948184528183011161000e578281602093846000960137010152565b503461000e57604036600319011261000e57600435610c018161035d565b6001600160401b039060243582811161000e573660238201121561000e57610c33903690602481600401359101610bac565b91610c3c6117ba565b60009160018060a01b031682526020906006825260408320918451918211610d18575b610c7382610c6d8554611514565b85611969565b80601f8311600114610cad5750839482939492610ca2575b50508160011b916000199060031b1c191617905580f35b015190503880610c8b565b90601f19831695610cc385600052602060002090565b9286905b888210610d0057505083600195969710610ce7575b505050811b01905580f35b015160001960f88460031b161c19169055388080610cdc565b80600185968294968601518155019501930190610cc7565b610d20610b00565b610c5f565b9181601f8401121561000e578235916001600160401b03831161000e576020838186019501011161000e57565b90606060031983011261000e57600435600381101561000e5791602435906001600160401b03821161000e57610d8a91600401610d25565b909160443590565b503461000e5761043d610da436610d52565b92919091612186565b600091031261000e57565b503461000e57600036600319011261000e57602060ff60025460a01c166040519015158152f35b60ff81160361000e57565b503461000e57608036600319011261000e57600435610e088161035d565b602435610e148161035d565b60443560643591610e2483610ddf565b6000546040516302571be360e01b815260048101849052906001600160a01b03906020908390602490829085165afa918215610ea7575b600092610e87575b5033911603610e755761043d936118af565b60405163be24598360e01b8152600490fd5b610ea091925060203d8111610470576104628183610b52565b9038610e63565b610eaf61172f565b610e5b565b503461000e5760008060031936011261035a57610ecf6117ba565b600280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576020604051619c408152f35b50634e487b7160e01b600052602160045260246000fd5b60031115610f7c57565b610b80610f5b565b503461000e57602036600319011261000e5760043560005260076020526060604060002060018060a01b036001818354169201549060ff8260a01c1691604051938452166020830152610fd681610f72565b6040820152f35b503461000e57600036600319011261000e576002546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e576000546040516302571be360e01b815260048035908201819052916001600160a01b03906020908390602490829085165afa91821561108d575b60009261106d575b5033911603610e755761043d906119e9565b61108691925060203d8111610470576104628183610b52565b903861105b565b61109561172f565b611053565b503461000e57602036600319011261000e576004356001600160401b03811161000e576110d66110d16107e2923690600401610484565b612635565b6040519182916020835260208301906104eb565b503461000e57602036600319011261000e576004356001600160401b03811161000e5761111b903690600401610d25565b908160141161000e578160281161000e578160681161000e576107e261115561057a61114e606719860160688601611b20565b9484611ac2565b604080518435606090811c8252601490950135851c6020820152908101949094529183019190915281906080820190565b503461000e57602036600319011261000e576004356111a48161035d565b60018060a01b031660005260056020526020604060002054604051908152f35b503461000e57602036600319011261000e5760043560005260046020526020604060002054604051908152f35b503461000e5761043d61120336610d52565b9261120f92919261174b565b612186565b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461000e5760008060031936011261035a576112756117ba565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156112cc57819060046040518094819363bb9fe6bf60e01b83525af180156103495761033d575080f35b50fd5b503461000e576000602036600319011261035a576004356112ef8161035d565b6112f76117ba565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691839190833b15610afc5760249083604051958694859363611d2e7560e11b85521660048401525af180156103495761033d575080f35b503461000e57600036600319011261000e576040516370a0823160e01b815230600482015260209081816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156113f8575b6000916113cb575b50604051908152f35b6113eb9150823d81116113f1575b6113e38183610b52565b81019061173c565b386113c2565b503d6113d9565b61140061172f565b6113ba565b5060008060031936011261035a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681813b1561035a5760405163b760faf960e01b8152306004820152918290602490829034905af180156103495761033d575080f35b359065ffffffffffff8216820361000e57565b503461000e57608036600319011261000e576004356001600160401b03811161000e576114b6903690600401610484565b6044359065ffffffffffff808316830361000e57606435908116810361000e576020926114e69260243590611812565b604051908152f35b503461000e57600036600319011261000e576020604051690a968163f0a57b4000008152f35b90600182811c92168015611544575b602083101461152e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611523565b906000929180549161155f83611514565b9182825260019384811690816000146115c15750600114611581575b50505050565b90919394506000526020928360002092846000945b8386106115ad57505050500101903880808061157b565b805485870183015294019385908201611596565b9294505050602093945060ff191683830152151560051b0101903880808061157b565b503461000e57602036600319011261000e576004356116028161035d565b60018060a01b031660005260066020526107e261162c6110d660406000206040519283809261154e565b0382610b52565b503461000e57602036600319011261000e576004356116518161035d565b6116596117ba565b6001600160a01b039081169081156116ad57600254826bffffffffffffffffffffffff60a01b821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e5761171036610493565b905061171a61174b565b61012082019060746105586105518486611a24565b506040513d6000823e3d90fd5b9081602091031261000e575190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361177d57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b6002546001600160a01b031633036117ce57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b926118919161182085612635565b9460018060a01b03903516600052600560205260406000205490604051948593611857602086019860e08a526101008701906104eb565b93466040870152306060870152608086015265ffffffffffff80921660a08601521660c084015260e083015203601f198101835282610b52565b51902090565b9081602091031261000e57516118ac8161035d565b90565b60ff841693929160028511611957576118f461191b9284600052600760205260406000209060018060a01b03166bffffffffffffffffffffffff60a01b825416179055565b604060002060010180546001600160a01b0319166001600160a01b03909216919091179055565b61192483610f72565b600052600760205261193d600160406000200192610f72565b815460ff60a01b191660a09190911b60ff60a01b16179055565b6040516306b7c75960e31b8152600490fd5b90601f811161197757505050565b600091825260208220906020601f850160051c830194106119b3575b601f0160051c01915b8281106119a857505050565b81815560010161199c565b9092508290611993565b50634e487b7160e01b600052601160045260246000fd5b919082018092116119e157565b610b806119bd565b600090815260046020528080806040812054816040812055818115611a1b575b3390f115611a1357565b610b8061172f565b506108fc611a09565b903590601e198136030182121561000e57018035906001600160401b03821161000e5760200191813603831361000e57565b6013198101919082116119e157565b919082039182116119e157565b9060741161000e5760540190602090565b9060541161000e5760140190604090565b9060881161000e5760740190601490565b909291928360881161000e57831161000e57608801916087190190565b9060681161000e5760480190602090565b9060141161000e5790601490565b9060281161000e5760140190601490565b909291928360681161000e57831161000e57606801916067190190565b9060481161000e5760280190602090565b359060208110611b2e575090565b6000199060200360031b1b1690565b356118ac8161035d565b90604051611b5481610b37565b8254815260018301546001600160a01b0390811660208301526002909301549092166040830152565b90604051611b8a81610b37565b82546001600160a01b03908116825260019093015492831660208201529160a01c60ff16604083611bba83610f72565b0152565b919082604091031261000e576118ac6020611bd884611472565b9301611472565b6bffffffffffffffffffffffff199035818116939260148110611c0157505050565b60140360031b82901b16169150565b6118ac9054611514565b61010060e0820135910135808214611c3f57480180821015611c3a575090565b905090565b5090565b9060206118ac9281815201906104eb565b6001906000198114611c64570190565b611c6c6119bd565b0190565b929190926001611ca76020611c86368886610bac565b6040518093819263ebbe024760e01b835284600484015260248301906104eb565b038173__$7b63f0111a75dee794ec9d028e8dda3afa$__5af4908115611d42575b600091611d24575b5003611d12576118ac93611cf9611d0c9360018060a01b03166000526005602052604060002090565b611d038154611c54565b90553691610bac565b90611d4f565b604051634be6321b60e01b8152600490fd5b611d3c915060203d81116113f1576113e38183610b52565b38611cd0565b611d4a61172f565b611cc8565b6118ac91611d5c91611e8e565b919091611d6e565b60051115610f7c57565b611d7781611d64565b80611d7f5750565b611d8881611d64565b60018103611dd55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611dde81611d64565b60028103611e2b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611e37600392611d64565b14611e3e57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b906041815114600014611ebc57611eb8916020820151906060604084015193015160001a90611ec6565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611f4a5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611f3d575b81516001600160a01b03811615611f37579190565b50600190565b611f4561172f565b611f22565b50505050600090600390565b81601f8201121561000e578051611f6c81610b82565b92611f7a6040519485610b52565b8184526020828401011161000e576118ac91602080850191016104c8565b91909160408184031261000e578051926001600160401b039384811161000e5781611fc4918401611f56565b93602083015190811161000e576118ac9201611f56565b9190939293611feb368285610bac565b926002612023602073__$7b63f0111a75dee794ec9d028e8dda3afa$__966040518093819263ebbe024760e01b835260048301611c43565b0381895af4908115612115575b6000916120f7575b5003611d12576118ac9361205360009261206f943691610bac565b90604051808095819463702deddd60e11b835260048301611c43565b03915af49081156120ea575b60009081926120be575b506120a66120b8929360018060a01b03166000526005602052604060002090565b6120b08154611c54565b905585611d4f565b93611d4f565b6120b892506120e2906120a6923d8091833e6120da8183610b52565b810190611f98565b925090612085565b6120f261172f565b61207b565b61210f915060203d81116113f1576113e38183610b52565b38612038565b61211d61172f565b612030565b90619c4091808302928304036119e157565b90690a968163f0a57b400000918281029281840414901517156119e157565b818102929181159184041417156119e157565b8115612170570490565b634e487b7160e01b600052601260045260246000fd5b919290926121948185611ad3565b61219d91611bdf565b60601c906121ab8186611ae1565b6121b491611bdf565b60601c906121c3818088611af2565b6121cc91611b20565b936121d78288611ac2565b6121e091611b20565b6001600160a01b03909316966121f68489612452565b9261220091611b0f565b61220991611b20565b61221290612122565b61221b916119d4565b9061222591612153565b9061222f91612166565b92612244836000526004602052604060002090565b8481549061225191611a65565b905561225c81610f72565b60020361234257906105ae61230192610594610b809661228e61227e88612134565b69d3c21bcecceda1000000900490565b6122ad6122a5876000526004602052604060002090565b918254611a65565b90556122f16122d66122c9876000526007602052604060002090565b546001600160a01b031690565b6122de610b73565b9889526001600160a01b03166020890152565b6001600160a01b03166040870152565b8151815560208201516001820180546001600160a01b039283166001600160a01b031991821617909155604090930151600290920180549093169116179055565b91906123706122c973__$7b63f0111a75dee794ec9d028e8dda3afa$__926000526007602052604060002090565b813b1561000e5760405163d403c7d960e01b81526001600160a01b0394851660048201529084166024820152604481019290925291909216606483015260009082908180608481015b03915af480156123de575b6123cb5750565b806123d8610b8092610b17565b80610dad565b6123e661172f565b6123c4565b9081602091031261000e57516118ac81610ddf565b94939260ff61242960809460409460018060a01b0316895260a060208a015260a089019061154e565b911682870152858103606087015260088152676574685f7573646360c01b602082015201930152565b6003546001600160a01b03918216600081815260066020908152604091829020915163313ce56760e01b815290959094869492939216918490869060049082905afa948515612547575b600095612514575b506124c490604051958694859463428edc3b60e11b865260048601612400565b038173__$11ed3ce857e5228bdfcc43783e8d0d374a$__5af4918215612507575b6000926124f157505090565b6118ac9250803d106113f1576113e38183610b52565b61250f61172f565b6124e5565b6124c491955061253990853d8711612540575b6125318183610b52565b8101906123eb565b94906124a4565b503d612527565b61254f61172f565b61249c565b6001600160a01b0381811660008181526008602081815260408084208885528083529084206001015494845291905293949093909273__$7b63f0111a75dee794ec9d028e8dda3afa$__9216906125e6906002906125d8906125b79087906105ae565b546001600160a01b03891660009081526008602052604090209096906105ae565b01546001600160a01b031690565b94823b156126315760405163d403c7d960e01b81526001600160a01b0391821660048201529181166024830152604482019390935293909116606484015282908180608481016123b9565b8480fd5b9081612645610120820182611a24565b500391601f198301906040519384016040528184526020840137565b1561000e57565b606460209293600060018060a01b03808254169060405197889687956306ab592360e01b8752600487015260248601521660448401525af180156126c8575b6126ae5750565b6126c59060203d81116113f1576113e38183610b52565b50565b6126d061172f565b6126a756fea2646970667358221220307c7fada0c66fbcf2238b2f4500d897f37a123d40ef10fa519092e04bad9fe364736f6c63430008110033",
    "sourceMap": "272:1254:51:-:0;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;1716:1:30;;2518:6:27;272:1254:51;;;;-1:-1:-1;;;;;272:1254:51;;;;;;719:10:38;272:1254:51;;;2566:40:27;-1:-1:-1;;2566:40:27;564:24:0;;;;-1:-1:-1;;;;;;272:1254:51;719:10:38;-1:-1:-1;;;;272:1254:51;;2518:6:27;272:1254:51;-1:-1:-1;272:1254:51;;-1:-1:-1;;;;;;272:1254:51;;;;;;;;2746:22:43;272:1254:51;;;;;;;;;;;;;;;;564:24:0;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:1254:51;;;;;;-1:-1:-1;272:1254:51;;;;;-1:-1:-1;272:1254:51;;;;-1:-1:-1;;;;;272:1254:51;;;;;;:::o",
    "linkReferences": {
      "src/library/Helpers.sol": {
        "HelperLibrary": [
          {
            "start": 7675,
            "length": 20
          },
          {
            "start": 8517,
            "length": 20
          },
          {
            "start": 9372,
            "length": 20
          },
          {
            "start": 9947,
            "length": 20
          }
        ]
      },
      "src/utils/OracleConsumer.sol": {
        "PriceFeedConsumer": [
          {
            "start": 9752,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610013575b600080fd5b60003560e01c806303587c4c1461027f5780630396cb601461027657806317ac89021461026d5780631eafffed146102645780631fbe11f91461025b578063205c2878146102525780632c8da5601461024957806331b3d678146102405780635c975abb146102375780636180deb61461022e578063715018a614610225578063741bef1a1461021c578063796d43711461021357806385c809a41461020a5780638da5cb5b146102015780638e19899e146101f85780639b671bcb146101ef5780639c58ce7a146101e65780639c90b443146101dd5780639dc23b10146101d4578063a9a23409146101cb578063b0d691fe146101c2578063bb9fe6bf146101b9578063c23a5cea146101b0578063c399ec88146101a7578063d0e30db01461019e578063d9d6491014610195578063eb9a2e311461018c578063f0ebdbe914610183578063f2fde38b1461017a5763f465c77e1461017257600080fd5b61000e611701565b5061000e611633565b5061000e6115e4565b5061000e6114ee565b5061000e611485565b5061000e611405565b5061000e611359565b5061000e6112cf565b5061000e61125a565b5061000e611214565b5061000e6111f1565b5061000e6111c4565b5061000e611186565b5061000e6110ea565b5061000e61109a565b5061000e611007565b5061000e610fdd565b5061000e610f84565b5061000e610f3d565b5061000e610f13565b5061000e610eb4565b5061000e610dea565b5061000e610db8565b5061000e610d92565b5061000e610be3565b5061000e610a6a565b5061000e610a02565b5061000e61052c565b5061000e61036e565b5061000e6102b7565b50602036600319011261000e57600435600052600460205260406000208054903482018092116102ac5755005b6102b46119bd565b55005b506000602036600319011261035a5760043563ffffffff8116809103610356576102df6117ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908290823b1561035657602460405180948193621cb65b60e51b8352600483015234905af18015610349575b61033d575080f35b61034690610b17565b80f35b61035161172f565b610335565b5080fd5b80fd5b6001600160a01b0381160361000e57565b503461000e57606036600319011261000e5761043d6004356024356103928161035d565b6044359161043861040a60206103be6103b260005460018060a01b031690565b6001600160a01b031690565b6040805183810189815260208101889052916103e6908290840103601f198101835282610b52565b5190209060405180809581946302571be360e01b8352600483019190602083019252565b03915afa908115610477575b600091610449575b506001600160a01b0316801590811561043f575b50612661565b612668565b005b9050331438610432565b61046a915060203d8111610470575b6104628183610b52565b810190611897565b3861041e565b503d610458565b61047f61172f565b610416565b908161016091031261000e5790565b606060031982011261000e57600435906001600160401b03821161000e576104bd91600401610484565b906024359060443590565b60005b8381106104db5750506000910152565b81810151838201526020016104cb565b90602091610504815180928185528580860191016104c8565b601f01601f1916010190565b9291906105276020916040865260408601906104eb565b930152565b503461000e5761053b36610493565b6101208301915060746105586105518486611a24565b9050611a56565b1080156109f3575b6109e15761058061057a6105748486611a24565b90611a72565b90611b20565b906105c26105bd836105ae61059488611b3d565b6001600160a01b0316600090815260086020526040902090565b90600052602052604060002090565b611b47565b93845182106109cf576105e76105e2846000526007602052604060002090565b611b7d565b9160409283810151916105f983610f72565b61061761060f6106098987611a24565b90611a83565b810190611bbe565b6106426103b261063c6106366106308d8b9e979e611a24565b90611a94565b90611bdf565b60601c90565b916106676106628460018060a01b03166000526006602052604060002090565b611c10565b156109be579061067c89969594939288611a24565b8061068692611aa5565b9a61069383828a8c611812565b6106c6907f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b9265ffffffffffff60d01b9060d01b169065ffffffffffff60a01b9060a01b16179a8b966106f38a611b3d565b956106fd8b611c1a565b8c516bffffffffffffffffffffffff196060998a1b81166020808401919091529890991b90981660348901526048880152606887015260888087019c909c529a855293996001600160a01b03949061075660a88d610b52565b61075f81610f72565b600181036108895750855185166001600160a01b0316158061086c575b61085b5790610795929161078f8a611b3d565b91611c70565b83519092906107ac906001600160a01b03166103b2565b9216918214159283610839575b50508115610830575b50610823575b506107e29394955b516107e6575b50505192839283610510565b0390f35b61081782610812610800846105ae61059461081c98611b3d565b60026000918281558260018201550155565b611b3d565b612554565b38806107d6565b60011794506107e26107c8565b905015386107c2565b0151909150610850906001600160a01b03166103b2565b8114159038806107b9565b89516301d31d0d60e41b8152600490fd5b5085840151610883906001600160a01b03166103b2565b1561077c565b600291929394975061089a81610f72565b146108b1575b5050505050506107e29394956107d0565b845184166001600160a01b03161580156109a1575b61099057906108df92916108d989611b3d565b91611fdb565b83519094919083906108f9906001600160a01b03166103b2565b91169281841415958661096c575b8615610930575b505050505050610924575b3880808080806108a0565b60019490941793610919565b161415935090918361094b575b50505038808080808061090e565b0151909150610962906001600160a01b03166103b2565b141538808061093d565b85840151909650610985906001600160a01b03166103b2565b818716141595610907565b88516301d31d0d60e41b8152600490fd5b50848601516109b8906001600160a01b03166103b2565b156108c6565b87516301d31d0d60e41b8152600490fd5b60405163e5f5a79960e01b8152600490fd5b6040516301d31d0d60e41b8152600490fd5b50619c4060a084013510610560565b503461000e57604036600319011261000e576060600435610a228161035d565b60018060a01b03809116600052600860205260406000206024356000526020526040600020805491600281600184015416920154169060405192835260208301526040820152f35b503461000e576000604036600319011261035a57600435610a8a8161035d565b610a926117ba565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691839190833b15610afc5760449083604051958694859363040b850f60e31b855216600484015260243560248401525af180156103495761033d575080f35b8280fd5b50634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610b2a57604052565b610b32610b00565b604052565b606081019081106001600160401b03821117610b2a57604052565b90601f801991011681019081106001600160401b03821117610b2a57604052565b60405190610b8082610b37565b565b6020906001600160401b038111610b9f575b601f01601f19160190565b610ba7610b00565b610b94565b929192610bb882610b82565b91610bc66040519384610b52565b82948184528183011161000e578281602093846000960137010152565b503461000e57604036600319011261000e57600435610c018161035d565b6001600160401b039060243582811161000e573660238201121561000e57610c33903690602481600401359101610bac565b91610c3c6117ba565b60009160018060a01b031682526020906006825260408320918451918211610d18575b610c7382610c6d8554611514565b85611969565b80601f8311600114610cad5750839482939492610ca2575b50508160011b916000199060031b1c191617905580f35b015190503880610c8b565b90601f19831695610cc385600052602060002090565b9286905b888210610d0057505083600195969710610ce7575b505050811b01905580f35b015160001960f88460031b161c19169055388080610cdc565b80600185968294968601518155019501930190610cc7565b610d20610b00565b610c5f565b9181601f8401121561000e578235916001600160401b03831161000e576020838186019501011161000e57565b90606060031983011261000e57600435600381101561000e5791602435906001600160401b03821161000e57610d8a91600401610d25565b909160443590565b503461000e5761043d610da436610d52565b92919091612186565b600091031261000e57565b503461000e57600036600319011261000e57602060ff60025460a01c166040519015158152f35b60ff81160361000e57565b503461000e57608036600319011261000e57600435610e088161035d565b602435610e148161035d565b60443560643591610e2483610ddf565b6000546040516302571be360e01b815260048101849052906001600160a01b03906020908390602490829085165afa918215610ea7575b600092610e87575b5033911603610e755761043d936118af565b60405163be24598360e01b8152600490fd5b610ea091925060203d8111610470576104628183610b52565b9038610e63565b610eaf61172f565b610e5b565b503461000e5760008060031936011261035a57610ecf6117ba565b600280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576020604051619c408152f35b50634e487b7160e01b600052602160045260246000fd5b60031115610f7c57565b610b80610f5b565b503461000e57602036600319011261000e5760043560005260076020526060604060002060018060a01b036001818354169201549060ff8260a01c1691604051938452166020830152610fd681610f72565b6040820152f35b503461000e57600036600319011261000e576002546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e576000546040516302571be360e01b815260048035908201819052916001600160a01b03906020908390602490829085165afa91821561108d575b60009261106d575b5033911603610e755761043d906119e9565b61108691925060203d8111610470576104628183610b52565b903861105b565b61109561172f565b611053565b503461000e57602036600319011261000e576004356001600160401b03811161000e576110d66110d16107e2923690600401610484565b612635565b6040519182916020835260208301906104eb565b503461000e57602036600319011261000e576004356001600160401b03811161000e5761111b903690600401610d25565b908160141161000e578160281161000e578160681161000e576107e261115561057a61114e606719860160688601611b20565b9484611ac2565b604080518435606090811c8252601490950135851c6020820152908101949094529183019190915281906080820190565b503461000e57602036600319011261000e576004356111a48161035d565b60018060a01b031660005260056020526020604060002054604051908152f35b503461000e57602036600319011261000e5760043560005260046020526020604060002054604051908152f35b503461000e5761043d61120336610d52565b9261120f92919261174b565b612186565b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461000e5760008060031936011261035a576112756117ba565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156112cc57819060046040518094819363bb9fe6bf60e01b83525af180156103495761033d575080f35b50fd5b503461000e576000602036600319011261035a576004356112ef8161035d565b6112f76117ba565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691839190833b15610afc5760249083604051958694859363611d2e7560e11b85521660048401525af180156103495761033d575080f35b503461000e57600036600319011261000e576040516370a0823160e01b815230600482015260209081816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156113f8575b6000916113cb575b50604051908152f35b6113eb9150823d81116113f1575b6113e38183610b52565b81019061173c565b386113c2565b503d6113d9565b61140061172f565b6113ba565b5060008060031936011261035a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681813b1561035a5760405163b760faf960e01b8152306004820152918290602490829034905af180156103495761033d575080f35b359065ffffffffffff8216820361000e57565b503461000e57608036600319011261000e576004356001600160401b03811161000e576114b6903690600401610484565b6044359065ffffffffffff808316830361000e57606435908116810361000e576020926114e69260243590611812565b604051908152f35b503461000e57600036600319011261000e576020604051690a968163f0a57b4000008152f35b90600182811c92168015611544575b602083101461152e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611523565b906000929180549161155f83611514565b9182825260019384811690816000146115c15750600114611581575b50505050565b90919394506000526020928360002092846000945b8386106115ad57505050500101903880808061157b565b805485870183015294019385908201611596565b9294505050602093945060ff191683830152151560051b0101903880808061157b565b503461000e57602036600319011261000e576004356116028161035d565b60018060a01b031660005260066020526107e261162c6110d660406000206040519283809261154e565b0382610b52565b503461000e57602036600319011261000e576004356116518161035d565b6116596117ba565b6001600160a01b039081169081156116ad57600254826bffffffffffffffffffffffff60a01b821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e5761171036610493565b905061171a61174b565b61012082019060746105586105518486611a24565b506040513d6000823e3d90fd5b9081602091031261000e575190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361177d57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b6002546001600160a01b031633036117ce57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b926118919161182085612635565b9460018060a01b03903516600052600560205260406000205490604051948593611857602086019860e08a526101008701906104eb565b93466040870152306060870152608086015265ffffffffffff80921660a08601521660c084015260e083015203601f198101835282610b52565b51902090565b9081602091031261000e57516118ac8161035d565b90565b60ff841693929160028511611957576118f461191b9284600052600760205260406000209060018060a01b03166bffffffffffffffffffffffff60a01b825416179055565b604060002060010180546001600160a01b0319166001600160a01b03909216919091179055565b61192483610f72565b600052600760205261193d600160406000200192610f72565b815460ff60a01b191660a09190911b60ff60a01b16179055565b6040516306b7c75960e31b8152600490fd5b90601f811161197757505050565b600091825260208220906020601f850160051c830194106119b3575b601f0160051c01915b8281106119a857505050565b81815560010161199c565b9092508290611993565b50634e487b7160e01b600052601160045260246000fd5b919082018092116119e157565b610b806119bd565b600090815260046020528080806040812054816040812055818115611a1b575b3390f115611a1357565b610b8061172f565b506108fc611a09565b903590601e198136030182121561000e57018035906001600160401b03821161000e5760200191813603831361000e57565b6013198101919082116119e157565b919082039182116119e157565b9060741161000e5760540190602090565b9060541161000e5760140190604090565b9060881161000e5760740190601490565b909291928360881161000e57831161000e57608801916087190190565b9060681161000e5760480190602090565b9060141161000e5790601490565b9060281161000e5760140190601490565b909291928360681161000e57831161000e57606801916067190190565b9060481161000e5760280190602090565b359060208110611b2e575090565b6000199060200360031b1b1690565b356118ac8161035d565b90604051611b5481610b37565b8254815260018301546001600160a01b0390811660208301526002909301549092166040830152565b90604051611b8a81610b37565b82546001600160a01b03908116825260019093015492831660208201529160a01c60ff16604083611bba83610f72565b0152565b919082604091031261000e576118ac6020611bd884611472565b9301611472565b6bffffffffffffffffffffffff199035818116939260148110611c0157505050565b60140360031b82901b16169150565b6118ac9054611514565b61010060e0820135910135808214611c3f57480180821015611c3a575090565b905090565b5090565b9060206118ac9281815201906104eb565b6001906000198114611c64570190565b611c6c6119bd565b0190565b929190926001611ca76020611c86368886610bac565b6040518093819263ebbe024760e01b835284600484015260248301906104eb565b038173__$7b63f0111a75dee794ec9d028e8dda3afa$__5af4908115611d42575b600091611d24575b5003611d12576118ac93611cf9611d0c9360018060a01b03166000526005602052604060002090565b611d038154611c54565b90553691610bac565b90611d4f565b604051634be6321b60e01b8152600490fd5b611d3c915060203d81116113f1576113e38183610b52565b38611cd0565b611d4a61172f565b611cc8565b6118ac91611d5c91611e8e565b919091611d6e565b60051115610f7c57565b611d7781611d64565b80611d7f5750565b611d8881611d64565b60018103611dd55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611dde81611d64565b60028103611e2b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611e37600392611d64565b14611e3e57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b906041815114600014611ebc57611eb8916020820151906060604084015193015160001a90611ec6565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611f4a5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611f3d575b81516001600160a01b03811615611f37579190565b50600190565b611f4561172f565b611f22565b50505050600090600390565b81601f8201121561000e578051611f6c81610b82565b92611f7a6040519485610b52565b8184526020828401011161000e576118ac91602080850191016104c8565b91909160408184031261000e578051926001600160401b039384811161000e5781611fc4918401611f56565b93602083015190811161000e576118ac9201611f56565b9190939293611feb368285610bac565b926002612023602073__$7b63f0111a75dee794ec9d028e8dda3afa$__966040518093819263ebbe024760e01b835260048301611c43565b0381895af4908115612115575b6000916120f7575b5003611d12576118ac9361205360009261206f943691610bac565b90604051808095819463702deddd60e11b835260048301611c43565b03915af49081156120ea575b60009081926120be575b506120a66120b8929360018060a01b03166000526005602052604060002090565b6120b08154611c54565b905585611d4f565b93611d4f565b6120b892506120e2906120a6923d8091833e6120da8183610b52565b810190611f98565b925090612085565b6120f261172f565b61207b565b61210f915060203d81116113f1576113e38183610b52565b38612038565b61211d61172f565b612030565b90619c4091808302928304036119e157565b90690a968163f0a57b400000918281029281840414901517156119e157565b818102929181159184041417156119e157565b8115612170570490565b634e487b7160e01b600052601260045260246000fd5b919290926121948185611ad3565b61219d91611bdf565b60601c906121ab8186611ae1565b6121b491611bdf565b60601c906121c3818088611af2565b6121cc91611b20565b936121d78288611ac2565b6121e091611b20565b6001600160a01b03909316966121f68489612452565b9261220091611b0f565b61220991611b20565b61221290612122565b61221b916119d4565b9061222591612153565b9061222f91612166565b92612244836000526004602052604060002090565b8481549061225191611a65565b905561225c81610f72565b60020361234257906105ae61230192610594610b809661228e61227e88612134565b69d3c21bcecceda1000000900490565b6122ad6122a5876000526004602052604060002090565b918254611a65565b90556122f16122d66122c9876000526007602052604060002090565b546001600160a01b031690565b6122de610b73565b9889526001600160a01b03166020890152565b6001600160a01b03166040870152565b8151815560208201516001820180546001600160a01b039283166001600160a01b031991821617909155604090930151600290920180549093169116179055565b91906123706122c973__$7b63f0111a75dee794ec9d028e8dda3afa$__926000526007602052604060002090565b813b1561000e5760405163d403c7d960e01b81526001600160a01b0394851660048201529084166024820152604481019290925291909216606483015260009082908180608481015b03915af480156123de575b6123cb5750565b806123d8610b8092610b17565b80610dad565b6123e661172f565b6123c4565b9081602091031261000e57516118ac81610ddf565b94939260ff61242960809460409460018060a01b0316895260a060208a015260a089019061154e565b911682870152858103606087015260088152676574685f7573646360c01b602082015201930152565b6003546001600160a01b03918216600081815260066020908152604091829020915163313ce56760e01b815290959094869492939216918490869060049082905afa948515612547575b600095612514575b506124c490604051958694859463428edc3b60e11b865260048601612400565b038173__$11ed3ce857e5228bdfcc43783e8d0d374a$__5af4918215612507575b6000926124f157505090565b6118ac9250803d106113f1576113e38183610b52565b61250f61172f565b6124e5565b6124c491955061253990853d8711612540575b6125318183610b52565b8101906123eb565b94906124a4565b503d612527565b61254f61172f565b61249c565b6001600160a01b0381811660008181526008602081815260408084208885528083529084206001015494845291905293949093909273__$7b63f0111a75dee794ec9d028e8dda3afa$__9216906125e6906002906125d8906125b79087906105ae565b546001600160a01b03891660009081526008602052604090209096906105ae565b01546001600160a01b031690565b94823b156126315760405163d403c7d960e01b81526001600160a01b0391821660048201529181166024830152604482019390935293909116606484015282908180608481016123b9565b8480fd5b9081612645610120820182611a24565b500391601f198301906040519384016040528184526020840137565b1561000e57565b606460209293600060018060a01b03808254169060405197889687956306ab592360e01b8752600487015260248601521660448401525af180156126c8575b6126ae5750565b6126c59060203d81116113f1576113e38183610b52565b50565b6126d061172f565b6126a756fea2646970667358221220307c7fada0c66fbcf2238b2f4500d897f37a123d40ef10fa519092e04bad9fe364736f6c63430008110033",
    "sourceMap": "272:1254:51:-:0;;;;;;;;;-1:-1:-1;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;272:1254:51;;;;;;-1:-1:-1;272:1254:51;;;;;-1:-1:-1;272:1254:51;;;4977:9:43;;272:1254:51;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;272:1254:51;;-1:-1:-1;;272:1254:51;;;;;;;;;;;;;;1063:62:27;;:::i;:::-;3173:10:0;-1:-1:-1;;;;;272:1254:51;;;;3173:55:0;;;;;272:1254:51;;;;;;;;;;3173:55:0;;272:1254:51;3173:55:0;;272:1254:51;3201:9:0;3173:55;;;;;;;272:1254:51;3173:55:0;;272:1254:51;;;3173:55:0;;;;:::i;:::-;272:1254:51;;3173:55:0;;;:::i;:::-;;;;272:1254:51;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;:::o;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;528:1:47;272:1254:51;;;;;;;:::i;:::-;;;;451:67:47;390:51;272:1254:51;390:9:47;272:1254:51;-1:-1:-1;272:1254:51;;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;390:9:47;272:1254:51;;;410:29:47;;;272:1254:51;;;;;;;;;410:29:47;;;272:1254:51;;;;410:29:47;;;;;;;;;:::i;:::-;272:1254:51;400:40:47;;272:1254:51;;;;;;;;;;;390:51:47;;272:1254:51;390:51:47;;272:1254:51;;;;;;;;390:51:47;;;;;;;;;;272:1254:51;-1:-1:-1;390:51:47;;;272:1254:51;-1:-1:-1;;;;;;272:1254:51;459:28:47;;;:58;;;;272:1254:51;451:67:47;;:::i;:::-;528:1;:::i;:::-;272:1254:51;459:58:47;507:10;;;491:26;459:58;;;390:51;;;;272:1254:51;390:51:47;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;272:1254:51;;;;;;;;;;:::o;:::-;;-1:-1:-1;;272:1254:51;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;272:1254:51;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;410:29:47;272:1254:51;-1:-1:-1;;272:1254:51;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;5795:23:43;;;;-1:-1:-1;5833:3:43;5795:35;:23;;;;:::i;:::-;:35;;;:::i;:::-;:41;:87;;;;272:1254:51;5791:133:43;;6222:40;6230:31;:23;;;;:::i;:::-;:31;;:::i;:::-;6222:40;;:::i;:::-;6544:13;272:1254:51;6539:29:43;6544:13;6539:19;6544:13;;;:::i;:::-;-1:-1:-1;;;;;272:1254:51;;;;;6539:4:43;272:1254:51;;;;;;;6539:19:43;272:1254:51;;;;;;;;;;6539:29:43;272:1254:51;:::i;:::-;;;;6582:30:43;;6578:65;;272:1254:51;6684:22:43;;272:1254:51;;6684:12:43;272:1254:51;;;;;;;6684:22:43;272:1254:51;:::i;:::-;6902:31:43;;;;;;272:1254:51;;;;;:::i;:::-;6985:94:43;7009:30;:23;;;;:::i;:::-;:30;;:::i;:::-;6985:94;;;;:::i;:::-;7177:58;7184:50;7192:41;7200:32;:23;;;;;;;:::i;:::-;:32;;:::i;:::-;7192:41;;:::i;:::-;272:1254:51;;;;7177:58:43;7336:24;7330:38;7336:24;;272:1254:51;;;;;;;;7336:14:43;272:1254:51;;;;;;;7336:24:43;7330:38;:::i;:::-;:43;7326:77;;7500:23;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;7601:49;;;;;;;:::i;:::-;7559:101;;7353:157:40;;;;;;;;7120:396;;7559:101:43;272:1254:51;;;;;;;;;;;;;;;;3079:88:1;7721:67:43;;7888:13;;;;:::i;:::-;7946:17;;;;:::i;:::-;272:1254:51;;-1:-1:-1;;272:1254:51;;;;;;7858:166:43;;;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7858:166:43;;;272:1254:51;;-1:-1:-1;;;;;272:1254:51;;7858:166:43;272:1254:51;;7858:166:43;:::i;:::-;272:1254:51;;;:::i;:::-;;8039:38:43;;8065:12;;-1:-1:-1;272:1254:51;;;;-1:-1:-1;;;;;272:1254:51;8315:41:43;;:102;;8035:1873;8294:166;;8525:13;8491:54;8525:13;;;;;:::i;:::-;8491:54;;:::i;:::-;272:1254:51;;;;;8676:37:43;;-1:-1:-1;;;;;272:1254:51;;;8676:37:43;272:1254:51;;8676:37:43;;;;:78;;;;8035:1873;8675:120;;;;;;8035:1873;8654:222;;;8035:1873;;272:1254:51;8035:1873:43;;;;272:1254:51;10106:130:43;;8035:1873;272:1254:51;;;;;;;;:::i;:::-;;;;10106:130:43;10201:13;10154;10142:36;10149:29;10154:13;10149:19;10154:13;10216:8;10154:13;;:::i;10149:29::-;272:1254:51;-1:-1:-1;272:1254:51;;;;;;;;;;;;10142:36:43;10201:13;:::i;:::-;10216:8;:::i;:::-;10106:130;;;;8654:222;272:1254:51;3079:88:1;;-1:-1:-1;272:1254:51;8654:222:43;;8675:120;8775:20;;;8675:120;;;8676:78;8727:27;272:1254:51;8727:27:43;;-1:-1:-1;8717:37:43;;-1:-1:-1;;;;;272:1254:51;;;8717:37:43;;;;8676:78;;;;;8294:166;272:1254:51;;-1:-1:-1;;;8439:21:43;;272:1254:51;;8439:21:43;8315:102;-1:-1:-1;8376:27:43;;;272:1254:51;8376:41:43;;-1:-1:-1;;;;;272:1254:51;;;8376:41:43;;8315:102;;8035:1873;8923:12;272:1254:51;;;;;;;;;:::i;:::-;8897:38:43;8893:1015;;8035:1873;;;;;;;272:1254:51;8035:1873:43;;;;;8893:1015;272:1254:51;;;;-1:-1:-1;;;;;272:1254:51;9202:41:43;:102;;;;8893:1015;9181:166;;9480:13;9412:117;9480:13;;;;;:::i;:::-;9412:117;;:::i;:::-;272:1254:51;;;;;;;;9565:44:43;;-1:-1:-1;;;;;272:1254:51;;;9565:44:43;272:1254:51;;9565:44:43;;;;;:114;;;;8893:1015;9564:252;;;;8893:1015;9543:354;;;;;;;;8893:1015;;;;;;;;;9543:354;272:1254:51;3079:88:1;;;;;9543:354:43;;9564:252;272:1254:51;9701:46:43;;;-1:-1:-1;272:1254:51;;9701:46:43;:114;;9564:252;;;;;;;;;;;;9701:114;9788:27;272:1254:51;9788:27:43;;-1:-1:-1;9771:44:43;;-1:-1:-1;;;;;272:1254:51;;;9771:44:43;;;9701:114;;;;;9565;9652:27;;;272:1254:51;9652:27:43;;-1:-1:-1;9633:46:43;;-1:-1:-1;;;;;272:1254:51;;;9633:46:43;272:1254:51;;;9633:46:43;;9565:114;;;9181:166;272:1254:51;;-1:-1:-1;;;9326:21:43;;272:1254:51;;9326:21:43;9202:102;-1:-1:-1;9263:27:43;;;272:1254:51;9263:41:43;;-1:-1:-1;;;;;272:1254:51;;;9263:41:43;;9202:102;;7326:77;272:1254:51;;-1:-1:-1;;;7382:21:43;;272:1254:51;;7382:21:43;6578:65;272:1254:51;;-1:-1:-1;;;6621:22:43;;272:1254:51;;6621:22:43;5791:133;272:1254:51;;-1:-1:-1;;;5903:21:43;;272:1254:51;;5903:21:43;5795:87;5840:27;1990:5;5840:27;;;272:1254:51;5840:42:43;5795:87;;272:1254:51;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;272:1254:51;2397:56:43;272:1254:51;;;-1:-1:-1;272:1254:51;;;-1:-1:-1;272:1254:51;;;;-1:-1:-1;272:1254:51;;;2397:56:43;;;272:1254:51;2397:56:43;;272:1254:51;;2397:56:43;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:1254:51;;-1:-1:-1;;272:1254:51;;;;;;;;;:::i;:::-;1063:62:27;;:::i;:::-;-1:-1:-1;;;;;2817:10:0;272:1254:51;;;;;;2817:46:0;;;;;272:1254:51;;;;;;;;;;;;;2817:46:0;;272:1254:51;;2817:46:0;;272:1254:51;;;;;;;2817:46:0;;;;;;;;272:1254:51;;;2817:46:0;272:1254:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;:::o;:::-;;410:29:47;;;272:1254:51;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;;;;;272:1254:51;;;;;410:29:47;272:1254:51;-1:-1:-1;;272:1254:51;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;272:1254:51;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:27;;;:::i;:::-;-1:-1:-1;272:1254:51;;;;;;;;;;;4854:14:43;272:1254:51;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:1254:51;;;;;410:29:47;;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;272:1254:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;930:13;272:1254;;;:::i;:::-;930:13;;;;;:::i;272:1254::-;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;1685:7:29;272:1254:51;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;272:1254:51;;;-1:-1:-1;;;2510:15:43;;272:1254:51;2510:15:43;;272:1254:51;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;2510:15:43;;;;;;;272:1254:51;-1:-1:-1;2510:15:43;;;272:1254:51;2529:10:43;;272:1254:51;;2510:29:43;2506:56;;2572:1;;;:::i;2506:56::-;272:1254:51;;-1:-1:-1;;;2548:14:43;;272:1254:51;;2548:14:43;2510:15;;;;;272:1254:51;2510:15:43;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;272:1254:51;;;;;;;;;;;;;;1063:62:27;;:::i;:::-;2518:6;272:1254:51;;-1:-1:-1;;;;;;272:1254:51;;;;;;;-1:-1:-1;;;;;272:1254:51;2566:40:27;272:1254:51;;2566:40:27;272:1254:51;;;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;1990:5:43;272:1254:51;;;;;;;;;;;;;;;;;;-1:-1:-1;272:1254:51;;;:::o;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;-1:-1:-1;272:1254:51;2341:49:43;272:1254:51;;;;-1:-1:-1;272:1254:51;;;;;;;;;;;2341:49:43;;272:1254:51;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;1273:6:27;272:1254:51;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;-1:-1:-1;272:1254:51;;;-1:-1:-1;;;2510:15:43;;272:1254:51;;;2510:15:43;;;272:1254:51;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;2510:15:43;;;;;;;272:1254:51;-1:-1:-1;2510:15:43;;;272:1254:51;2529:10:43;;272:1254:51;;2510:29:43;2506:56;;2572:1;;;:::i;2510:15::-;;;;;272:1254:51;2510:15:43;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;272:1254:51;;;;;;;-1:-1:-1;;272:1254:51;;;;;;-1:-1:-1;;;;;272:1254:51;;;;1069:13;272:1254;;;;;;;;:::i;:::-;1069:13;:::i;:::-;272:1254;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;:::i;:::-;;;1268:2;272:1254;;;;1329:2;272:1254;;;;1379:3;272:1254;;;;1429:24;1437:15;1363:22;-1:-1:-1;;272:1254:51;;1379:3;272:1254;;1363:22;:::i;:::-;1437:15;;;:::i;1429:24::-;272:1254;;;;;;;;;;;1268:2;272:1254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;272:1254:51;2236:46:43;272:1254:51;;;;-1:-1:-1;272:1254:51;;;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;;;-1:-1:-1;272:1254:51;;;;;;-1:-1:-1;272:1254:51;;;;;;;;;;;;;1308:13:0;272:1254:51;;;:::i;:::-;1143:186:0;;;;;;:::i;:::-;1308:13;:::i;272:1254:51:-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;471:39:0;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;;;;;;1063:62:27;;:::i;:::-;272:1254:51;3640:10:0;-1:-1:-1;;;;;272:1254:51;3640:24:0;;;;;272:1254:51;;;;;;;;;;;;3640:24:0;;;;;;;;;;272:1254:51;;;3640:24:0;272:1254:51;;;;;;;-1:-1:-1;272:1254:51;;-1:-1:-1;;272:1254:51;;;;;;;;;:::i;:::-;1063:62:27;;:::i;:::-;-1:-1:-1;;;;;3975:10:0;272:1254:51;;;;;;3975:41:0;;;;;272:1254:51;;;;;;;;;;;;;3975:41:0;;272:1254:51;;3975:41:0;;272:1254:51;3975:41:0;;;;;;;;272:1254:51;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;;;-1:-1:-1;;;3387:35:0;;3416:4;272:1254:51;3387:35:0;;272:1254:51;3387:35:0;;;272:1254:51;;;3387:10:0;-1:-1:-1;;;;;272:1254:51;3387:35:0;;;;;;;272:1254:51;;3387:35:0;;;272:1254:51;;;;;;;;3387:35:0;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;272:1254:51;;;;;;;;;;;2518:10:0;-1:-1:-1;;;;;272:1254:51;2518:54:0;;;;;;272:1254:51;;-1:-1:-1;;;2518:54:0;;2566:4;272:1254:51;2518:54:0;;272:1254:51;;;;;;;;2547:9:0;;2518:54;;;;;;;;272:1254:51;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;2138:6:43;272:1254:51;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;272:1254:51;;;;-1:-1:-1;272:1254:51;;;-1:-1:-1;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;272:1254:51;2288:47:43;272:1254:51;;;;;;-1:-1:-1;272:1254:51;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;272:1254:51;;;;;;;;;:::i;:::-;1063:62:27;;:::i;:::-;-1:-1:-1;;;;;272:1254:51;;;;2162:22:27;;272:1254:51;;2518:6:27;272:1254:51;;;;;;;;2518:6:27;272:1254:51;;2566:40:27;-1:-1:-1;2566:40:27;;272:1254:51;;;;-1:-1:-1;;;272:1254:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:1254:51;;;;;;;;;;;;;;;:::i;:::-;786:22:0;;;;:::i;:::-;5795:23:43;;;;5833:3;5795:35;:23;;;;:::i;272:1254:51:-;;;;;;;;;;;;;;;;;;;;;;:::o;4087:135:0:-;4178:10;-1:-1:-1;;;;;272:1254:51;4156:10:0;:33;272:1254:51;;4087:135:0:o;272:1254:51:-;;;-1:-1:-1;;;272:1254:51;;;;;;;;;;;;-1:-1:-1;;;272:1254:51;;;;;;;1359:130:27;1273:6;272:1254:51;-1:-1:-1;;;;;272:1254:51;719:10:38;1422:23:27;272:1254:51;;1359:130:27:o;272:1254:51:-;;;;;;;;;;;;;;;;;;;;;;;;;3189:616:43;;3504:280;3189:616;3536:13;;;:::i;:::-;272:1254:51;;;;;;1859:39:7;;272:1254:51;-1:-1:-1;272:1254:51;3641:11:43;272:1254:51;;;-1:-1:-1;272:1254:51;;;;;3504:280:43;;;272:1254:51;;3504:280:43;;272:1254:51;;;;;;;;;:::i;:::-;3571:13:43;;272:1254:51;;;;3614:4:43;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;3504:280:43;410:29:47;;3504:280:43;;;;;;:::i;:::-;272:1254:51;3477:321:43;;3189:616;:::o;272:1254:51:-;;;;;;;;;;;;;:::i;:::-;;:::o;4118:419:43:-;272:1254:51;;;;4118:419:43;;4311:1;4300:12;;4296:40;;4346:51;4407:53;272:1254:51;;-1:-1:-1;272:1254:51;4346:12:43;272:1254:51;;;-1:-1:-1;272:1254:51;;;;;;;;;;;;;;;;;;4346:51:43;272:1254:51;-1:-1:-1;272:1254:51;4407:35:43;;272:1254:51;;-1:-1:-1;;;;;;272:1254:51;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;4407:53:43;272:1254:51;;;:::i;:::-;-1:-1:-1;272:1254:51;4346:12:43;272:1254:51;;;4407:35:43;272:1254:51;-1:-1:-1;272:1254:51;4470:39:43;272:1254:51;;:::i;:::-;;;-1:-1:-1;;;;272:1254:51;;;;;;-1:-1:-1;;;272:1254:51;;;;4118:419:43:o;4296:40::-;272:1254:51;;-1:-1:-1;;;4321:15:43;;;;;272:1254:51;;;;;;;;;;:::o;:::-;-1:-1:-1;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;5074:194:43:-;-1:-1:-1;272:1254:51;;;5162:13:43;272:1254:51;;;;;;;;;;;;;;5224:37:43;;;;;5074:194;5232:10;5224:37;;;;;5074:194::o;5224:37::-;;;:::i;:::-;;;;;272:1254:51;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;272:1254:51;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;5833:3:43;272:1254:51;;;6254:2:43;272:1254:51;;;;:::o;:::-;;6254:2:43;272:1254:51;;;5828:2:43;272:1254:51;;;;:::o;:::-;;7228:3:43;272:1254:51;;;5833:3:43;272:1254:51;;;;:::o;:::-;;;;;;7228:3:43;272:1254:51;;;;;;;7228:3:43;272:1254:51;;-1:-1:-1;;272:1254:51;;:::o;:::-;;1379:3;272:1254;;;1445:2;272:1254;;;;:::o;:::-;;11932:2:43;272:1254:51;;;;11932:2:43;272:1254:51;:::o;:::-;;11993:2:43;272:1254:51;;;11932:2:43;272:1254:51;;11932:2:43;272:1254:51;:::o;:::-;;;;;;12043:3:43;272:1254:51;;;;;;;12043:3:43;272:1254:51;;-1:-1:-1;;272:1254:51;;:::o;:::-;;12109:2:43;272:1254:51;;;11993:2:43;272:1254:51;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;272:1254:51;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;272:1254:51:o;:::-;;;;;:::i;2083:472:7:-;2273:27;2213:19;;;272:1254:51;2273:27:7;;272:1254:51;2314:36:7;;;2310:161;;2528:13;272:1254:51;3723:5:7;;;;;;:13;2083:472;:::o;3723:13::-;;;2083:472;:::o;2310:161::-;2441:19;;:::o;272:1254:51:-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;272:1254:51;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;10397:312:43:-;;;;;10586:1;272:1254:51;10564:18:43;272:1254:51;;;;;:::i;:::-;;;;;;;;;;10564:18:43;;;;;;272:1254:51;;;;;;:::i;:::-;10564:18:43;:16;;:18;;;;;;;10397:312;-1:-1:-1;10564:18:43;;;10397:312;10564:23;;10560:60;;10670:32;10630:19;;272:1254:51;10630:19:43;272:1254:51;;;;;;;;10630:11:43;272:1254:51;;;;;;;10630:19:43;:21;272:1254:51;;10630:21:43;:::i;:::-;272:1254:51;;;;;:::i;:::-;10670:32:43;;:::i;10560:60::-;272:1254:51;;-1:-1:-1;;;10596:24:43;;10564:18;;10596:24;10564:18;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;3661:227:40;3849:5;3661:227;3800:27;3661:227;3800:27;:::i;:::-;3849:5;;;;:::i;272:1254:51:-;;-1:-1:-1;272:1254:51;;;:::o;570:511:40:-;272:1254:51;;;:::i;:::-;638:29:40;;;683:7;:::o;634:441::-;272:1254:51;;;:::i;:::-;743:29:40;734:38;;743:29;;272:1254:51;;-1:-1:-1;;;788:34:40;;272:1254:51;788:34:40;;;272:1254:51;;;;;;;;;;;;;788:34:40;730:345;272:1254:51;;;:::i;:::-;852:35:40;843:44;;852:35;;272:1254:51;;-1:-1:-1;;;903:41:40;;272:1254:51;903:41:40;;;272:1254:51;;;;;;;;;;;;;788:34:40;839:236;272:1254:51;;974:30:40;272:1254:51;;:::i;:::-;965:39:40;961:114;;570:511::o;961:114::-;272:1254:51;;-1:-1:-1;;;1020:44:40;;272:1254:51;1020:44:40;;;272:1254:51;;;;;;;;;;;-1:-1:-1;;;272:1254:51;;;;;;788:34:40;2145:730;;2283:2;272:1254:51;;2263:22:40;2259:610;2283:2;;;2746:25;2546:180;;;;;;;;;;;;;;-1:-1:-1;2546:180:40;2746:25;;:::i;:::-;2739:32;;:::o;2259:610::-;2802:56;;2818:1;2802:56;2822:35;2802:56;:::o;5009:1456::-;;;;6021:66;6008:79;;6004:161;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6276:24:40;;;;;;;;;;;;5009:1456;6276:24;;-1:-1:-1;;;;;272:1254:51;;6314:20:40;6310:101;;6421:37;5009:1456;:::o;6310:101::-;6350:50;6276:24;6350:50;:::o;6276:24::-;;;:::i;:::-;;;6004:161;6103:51;;;;6119:1;6103:51;6123:30;6103:51;:::o;272:1254:51:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;10949:485:43:-;;;;;;272:1254:51;;;;;:::i;:::-;11136:17:43;11159:1;11136:19;;:17;272:1254:51;;;;;;;;;;11136:19:43;;;;;;:::i;:::-;;;;;;;;;;;10949:485;-1:-1:-1;11136:19:43;;;10949:485;11136:24;;11132:61;;11395:32;272:1254:51;;-1:-1:-1;272:1254:51;11256:36:43;272:1254:51;;;;:::i;:::-;;;;;;;;;;;;11256:36:43;;11136:19;11256:36;;;:::i;:::-;;;;;;;;;;10949:485;-1:-1:-1;;;11256:36:43;;;10949:485;11302:19;;11343:32;11302:19;;272:1254:51;;;;;;;;10630:11:43;272:1254:51;;;;;;;11302:19:43;:21;272:1254:51;;11302:21:43;:::i;:::-;272:1254:51;;11343:32:43;;:::i;:::-;11395;;:::i;11256:36::-;11343:32;11256:36;;;;11302:19;11256:36;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;-1:-1:-1;11256:36:43;;;;;;:::i;:::-;;;11136:19;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;272:1254:51;;1990:5:43;272:1254:51;;;;;;;;;;:::o;:::-;;2138:6:43;272:1254:51;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;11742:1580:43;;;;;11923:12;;;;:::i;:::-;11915:21;;;:::i;:::-;272:1254:51;;11982:14:43;;;;;:::i;:::-;11974:23;;;:::i;:::-;272:1254:51;;12035:13:43;;;;;;:::i;:::-;12027:22;;;:::i;:::-;12101:15;;;;;:::i;:::-;12093:24;;;:::i;:::-;-1:-1:-1;;;;;272:1254:51;;;;12219:62:43;272:1254:51;;12219:62:43;:::i;:::-;12411:14;;;;:::i;:::-;12403:23;;;:::i;:::-;12380:47;;;:::i;:::-;12364:63;;;:::i;:::-;12363:98;;;;:::i;:::-;12362:118;;;;:::i;:::-;12491:23;;;272:1254:51;;12491:13:43;272:1254:51;;;;;;;12491:23:43;272:1254:51;;;12491:35:43;;;;:::i;:::-;272:1254:51;;;;;:::i;:::-;12549:25:43;12541:33;12549:25;;12732:31;12871:13;:23;12732:31;12897:135;272:1254:51;12732:31:43;12731:40;12732:31;;;:::i;:::-;12767:4;272:1254:51;;;;12731:40:43;12704:67;:23;;272:1254:51;;12491:13:43;272:1254:51;;;;;;;12704:23:43;272:1254:51;;;12704:67:43;:::i;:::-;272:1254:51;;12897:135:43;12945:39;:22;;272:1254:51;;6684:12:43;272:1254:51;;;;;;;12945:22:43;272:1254:51;-1:-1:-1;;;;;272:1254:51;;;12945:39:43;272:1254:51;;:::i;:::-;;;;-1:-1:-1;;;;;272:1254:51;12897:135:43;;;272:1254:51;;12897:135:43;-1:-1:-1;;;;;272:1254:51;12897:135:43;;;272:1254:51;;12871:23:43;272:1254:51;;;;;;;;;;;;;-1:-1:-1;;;;;272:1254:51;;;-1:-1:-1;;;;;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;12537:779:43;13147:27;;13192:39;:22;13147:27;13192:22;272:1254:51;;6684:12:43;272:1254:51;;;;;;;13192:39:43;13147:158;;;;;272:1254:51;;-1:-1:-1;;;13147:158:43;;-1:-1:-1;;;;;272:1254:51;;;12491:13:43;13147:158;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;11923:12:43;;272:1254:51;;;;;;;13147:158:43;;;;;;;;;12537:779;13147:158;;12537:779;11742:1580::o;13147:158::-;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;272:1254:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:1254:51;;;;;;;;:::o;13445:384:43:-;13591:9;272:1254:51;-1:-1:-1;;;;;272:1254:51;;;;;;;7336:14:43;272:1254:51;;;;;;;;;;;-1:-1:-1;;;13665:16:43;;272:1254:51;;;;;;;;;;;;;;;13665:16:43;;272:1254:51;;13665:16:43;;;;;;;13445:384;13665:16;;;;13445:384;272:1254:51;13591:231:43;272:1254:51;;;;;;;;;;;13591:231:43;;13665:16;13591:231;;;:::i;:::-;;:25;;:231;;;;;;;13445:384;13665:16;13591:231;;;13582:240;;13445:384;:::o;13591:231::-;;;;;;-1:-1:-1;13591:231:43;;;;;;:::i;:::-;;;:::i;:::-;;;13665:16;13591:231;13665:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;13882:226;-1:-1:-1;;;;;272:1254:51;;;-1:-1:-1;272:1254:51;;;13989:4:43;272:1254:51;;;;;;;;;;;;;;;;;;13989:25:43;272:1254:51;;;;;;;;;-1:-1:-1;;272:1254:51;;13949:26:43;;272:1254:51;;14067:24:43;;;;:18;;14028;;272:1254:51;;14028:12:43;272:1254:51;14028:18:43;272:1254:51;-1:-1:-1;;;;;272:1254:51;;;;;;6539:4:43;272:1254:51;;;;;;;14067:12:43;;272:1254:51;14067:18:43;:24;272:1254:51;-1:-1:-1;;;;;272:1254:51;;;14067:24:43;13949:152;;;;;;272:1254:51;;-1:-1:-1;;;13949:152:43;;-1:-1:-1;;;;;272:1254:51;;;13949:152:43;;;272:1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13949:152:43;272:1254:51;13949:152:43;272:1254:51;;;14114:730:43;;14301:23;;;;;;;:::i;:::-;14577:261;;410:29:47;;;14577:261:43;;;;;;;;;;;;;;;;;14114:730::o;272:1254:51:-;;;;:::o;681:149:47:-;272:1254:51;784:39:47;681:149;;784:3;272:1254:51;;;;;;;;;;;;;;;;;;;;784:39:47;;;;;272:1254:51;;;;;;;;;;784:39:47;;;;;;681:149;784:39;;681:149;:::o;784:39::-;;;;;;;;;;;;;:::i;:::-;;681:149::o;784:39::-;;;:::i;:::-;;",
    "linkReferences": {
      "src/library/Helpers.sol": {
        "HelperLibrary": [
          {
            "start": 7339,
            "length": 20
          },
          {
            "start": 8181,
            "length": 20
          },
          {
            "start": 9036,
            "length": 20
          },
          {
            "start": 9611,
            "length": 20
          }
        ]
      },
      "src/utils/OracleConsumer.sol": {
        "PriceFeedConsumer": [
          {
            "start": 9416,
            "length": 20
          }
        ]
      }
    },
    "immutableReferences": {
      "13": [
        {
          "start": 737,
          "length": 32
        },
        {
          "start": 2716,
          "length": 32
        },
        {
          "start": 4651,
          "length": 32
        },
        {
          "start": 4728,
          "length": 32
        },
        {
          "start": 4865,
          "length": 32
        },
        {
          "start": 5000,
          "length": 32
        },
        {
          "start": 5141,
          "length": 32
        },
        {
          "start": 5965,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "COST_OF_POST()": "796d4371",
    "REVERT_FINE_CONSTANT()": "eb9a2e31",
    "addStake(uint32)": "0396cb60",
    "addToken(address,string)": "2c8da560",
    "debt(address,bytes32)": "1fbe11f9",
    "decodeContext(bytes)": "9c58ce7a",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "exposed__pack((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "9b671bcb",
    "exposed__postOp(uint8,bytes,uint256)": "31b3d678",
    "exposed__validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "1eafffed",
    "fundNode(bytes32)": "03587c4c",
    "getDeposit()": "c399ec88",
    "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint48,uint48)": "d9d64910",
    "nodeToBalance(bytes32)": "9dc23b10",
    "nodeToConfig(bytes32)": "85c809a4",
    "owner()": "8da5cb5b",
    "paused()": "5c975abb",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "priceFeed()": "741bef1a",
    "register(bytes32,address,bytes32)": "17ac8902",
    "renounceOwnership()": "715018a6",
    "senderNonce(address)": "9c90b443",
    "setNodeSigners(address,address,bytes32,uint8)": "6180deb6",
    "tokenToUSDPair(address)": "f0ebdbe9",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "withdraw(bytes32)": "8e19899e",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedToValidatedOp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughValueForGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnAuthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COST_OF_POST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVERT_FINE_CONSTANT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"pair\",\"type\":\"string\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"debt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"debtee\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"decodeContext\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"exposed__pack\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"exposed__postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requiredPreFund\",\"type\":\"uint256\"}],\"name\":\"exposed__validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"fundNode\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"nodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nodeToBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nodeToConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"verifyingSigner1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"verifyingSigner2\",\"type\":\"address\"},{\"internalType\":\"enum SigCount\",\"name\":\"validNumOfSignatures\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"primarySigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"secondarySigner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigCount\",\"type\":\"uint8\"}],\"name\":\"setNodeSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenToUSDPair\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"addToken(address,string)\":{\"details\":\"only tokens with priceFeeds can be set. (stable and non stable);\",\"params\":{\"pair\":\"the corresponding string pair for that token e.g eth_usdt\",\"token\":\"An ERC20 Token, will be used for gas payment\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"register(bytes32,address,bytes32)\":{\"params\":{\"label\":\"domain name e.g `alice`\",\"node\":\"TLD domain nameHash\",\"owner\":\"who will own this domain\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setNodeSigners(address,address,bytes32,uint8)\":{\"params\":{\"node\":\"- the domain name the transaction sender has.\",\"primarySigner\":\"- The primary/main signer\",\"secondarySigner\":\"- an additional signer that can be use for 2FA or delegation\",\"sigCount\":\"- total number of signatures required in the validation step\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdraw(bytes32)\":{\"details\":\"only a node owner can withdraw balances specific tot he node.\"},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint48,uint48)\":{\"notice\":\"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Paymaster.t.sol\":\"UsernamesPaymasterHarness\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aa/=lib/account-abstraction/\",\":@chainlink/=lib/chainlink-brownie-contracts/\",\":@ens/contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@usernames/=src/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":mocks/=test/mocks/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47\",\"dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT\"]},\"lib/ens-contracts/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Paymaster.sol\":{\"keccak256\":\"0x5b1d2ea0b81a0bafb16e9ad1e7e7a4ccc93577b5ea10c59ed06424e957c6d4b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05fa7da578d26e9739d7c9f1c555ed59ce86d97ab88ccab7096a9b54c44901b6\",\"dweb:/ipfs/QmfZ1XqQA5RGcPi6NBYKKXXMrmxALYZhdvar84aRUfNzBR\"]},\"src/interfaces/ISupraConsumer.sol\":{\"keccak256\":\"0xa9775ec041cd89eb65e5b9633f66868b26f7f465c5cf7df7d6f8f7d07b4c8245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fa8bc526183ee45eef55d4aed17414fb43160df97bfc0b9dad03085104591a7\",\"dweb:/ipfs/QmcEyrKBrFEAfCtF7p6yoeNEHYVJPt7UURFGBqRWr6aWh5\"]},\"src/library/Errors.sol\":{\"keccak256\":\"0xce59edb68df8fe3a2d9c8f8083beb389d9d66485d3166c165c69171cf9c4cba1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af357e59e3b762a415d54ee4af0df733b928381884c03c35df760bfd9a114191\",\"dweb:/ipfs/QmVWgq3W8ctES36fVQGsDQi5MJtp8t7n4iTZ6omi4K2MtY\"]},\"src/library/Helpers.sol\":{\"keccak256\":\"0x4473f1ad538edfe9a4b6dc175c16405db1f0e0323455629f86a4d90eb43ef08f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f804d9128e1255f6a61bf7a9f7a482f603725843ec7eaca75f36f0d738dc5cfd\",\"dweb:/ipfs/QmdvgWEhFVyTpoovawU5Qkxspisq4oLsvDATHP92zzrDKU\"]},\"src/registrars/FIFSRegistrar.sol\":{\"keccak256\":\"0x5eb8a9d924f962a6348c45ac5fccef8b46ce4223058e69822eed3368fe163ba9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e8ba78c5f671cf01aa63093db18c09b4eb4a9b49b9648e7fdca65a7cb4b33a1\",\"dweb:/ipfs/QmeJDwCCkLE1Y4D9xYHw22BUf5XXFpyGjdCyLqW4ctk9aQ\"]},\"src/security/Guard.sol\":{\"keccak256\":\"0x686d79efd6b053ce84e878af39223c51bbbae7338e179d7425b736743edf9294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21ae78a51868c5bd5737cc2b26ff6cf04964d573839564a763d7f98fd0d5c0fe\",\"dweb:/ipfs/QmdAxagVagEkBDwse7QFTmmuN8iQPvGsbyMZQ8W3FQG9FQ\"]},\"src/tokens/ERC20.sol\":{\"keccak256\":\"0xedad10777d6d0c4553311601f110cc0f7581e27712bae66dd35474da6ca87b45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://288745e26329933a0ff816f423ec0fead5c7df64a7560c14c8c0f22f3213be80\",\"dweb:/ipfs/QmbqJE9KaqC6JerrK7vqvfkngrEYL1C7F4EcDfNh2rCLqs\"]},\"src/utils/OracleConsumer.sol\":{\"keccak256\":\"0x9b5cf6bfd9babbe490e83f5452ac7e2027aec3a7bf3438af9ff0f85fa019b144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://584d07343ef4f8b16a20fc5554180c201886e7afaf75dd8fe2735f32fe99c708\",\"dweb:/ipfs/QmamVam8nYeRamzmmH9zQ6RaXZAvbZthngyRXEdMVEyxpX\"]},\"test/Paymaster.t.sol\":{\"keccak256\":\"0x61cca3db1ce1132e33f8a37122503a4e4467fa2c5215ea36d08ac165bda15fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75d30e8aea3ad950b786659ff76747cb82e11e0f335d8c7f341bece09bfd5c44\",\"dweb:/ipfs/QmVeUPEV8rMgHYWa7EQkZKoWwynpczo883oSkV4m29Zufn\"]},\"test/mocks/MocksAndContracts.sol\":{\"keccak256\":\"0x546cb5a72071c8d80481f1261a4d1212a58b52b6c39ee3b1ec02fcd700bbb7b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f12be83b8f0513352454db53efcd6bdf8c8dd3418188252823a250d83174d800\",\"dweb:/ipfs/QmVWoWU9f7Si7LY15TxioprrLhbQfyivuXXhCphurPzHcx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feed",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedToValidatedOp"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidConfig"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignatureLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughValueForGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COST_OF_POST",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REVERT_FINE_CONSTANT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "pair",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "debtee",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decodeContext",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "exposed__pack",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "ret",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exposed__postOp"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "requiredPreFund",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exposed__validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "node",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fundNode"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "nodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nodeToBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nodeToConfig",
          "outputs": [
            {
              "internalType": "address",
              "name": "verifyingSigner1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "verifyingSigner2",
              "type": "address"
            },
            {
              "internalType": "enum SigCount",
              "name": "validNumOfSignatures",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceFeed",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "label",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "node",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "senderNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "primarySigner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "secondarySigner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "node",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "sigCount",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNodeSigners"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenToUSDPair",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "node",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "addToken(address,string)": {
            "details": "only tokens with priceFeeds can be set. (stable and non stable);",
            "params": {
              "pair": "the corresponding string pair for that token e.g eth_usdt",
              "token": "An ERC20 Token, will be used for gas payment"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "register(bytes32,address,bytes32)": {
            "params": {
              "label": "domain name e.g `alice`",
              "node": "TLD domain nameHash",
              "owner": "who will own this domain"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setNodeSigners(address,address,bytes32,uint8)": {
            "params": {
              "node": "- the domain name the transaction sender has.",
              "primarySigner": "- The primary/main signer",
              "secondarySigner": "- an additional signer that can be use for 2FA or delegation",
              "sigCount": "- total number of signatures required in the validation step"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp      zero length to signify postOp is not required.",
              "validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdraw(bytes32)": {
            "details": "only a node owner can withdraw balances specific tot he node."
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint48,uint48)": {
            "notice": "return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\", which will carry the signature itself."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aa/=lib/account-abstraction/",
        ":@chainlink/=lib/chainlink-brownie-contracts/",
        ":@ens/contracts/=lib/ens-contracts/contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@usernames/=src/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":mocks/=test/mocks/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Paymaster.t.sol": "UsernamesPaymasterHarness"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443",
        "urls": [
          "bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0",
          "dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456",
        "urls": [
          "bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8",
          "dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328",
        "urls": [
          "bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47",
          "dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT"
        ],
        "license": "MIT"
      },
      "lib/ens-contracts/contracts/registry/ENS.sol": {
        "keccak256": "0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda",
        "urls": [
          "bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314",
          "dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Paymaster.sol": {
        "keccak256": "0x5b1d2ea0b81a0bafb16e9ad1e7e7a4ccc93577b5ea10c59ed06424e957c6d4b7",
        "urls": [
          "bzz-raw://05fa7da578d26e9739d7c9f1c555ed59ce86d97ab88ccab7096a9b54c44901b6",
          "dweb:/ipfs/QmfZ1XqQA5RGcPi6NBYKKXXMrmxALYZhdvar84aRUfNzBR"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISupraConsumer.sol": {
        "keccak256": "0xa9775ec041cd89eb65e5b9633f66868b26f7f465c5cf7df7d6f8f7d07b4c8245",
        "urls": [
          "bzz-raw://4fa8bc526183ee45eef55d4aed17414fb43160df97bfc0b9dad03085104591a7",
          "dweb:/ipfs/QmcEyrKBrFEAfCtF7p6yoeNEHYVJPt7UURFGBqRWr6aWh5"
        ],
        "license": "MIT"
      },
      "src/library/Errors.sol": {
        "keccak256": "0xce59edb68df8fe3a2d9c8f8083beb389d9d66485d3166c165c69171cf9c4cba1",
        "urls": [
          "bzz-raw://af357e59e3b762a415d54ee4af0df733b928381884c03c35df760bfd9a114191",
          "dweb:/ipfs/QmVWgq3W8ctES36fVQGsDQi5MJtp8t7n4iTZ6omi4K2MtY"
        ],
        "license": "MIT"
      },
      "src/library/Helpers.sol": {
        "keccak256": "0x4473f1ad538edfe9a4b6dc175c16405db1f0e0323455629f86a4d90eb43ef08f",
        "urls": [
          "bzz-raw://f804d9128e1255f6a61bf7a9f7a482f603725843ec7eaca75f36f0d738dc5cfd",
          "dweb:/ipfs/QmdvgWEhFVyTpoovawU5Qkxspisq4oLsvDATHP92zzrDKU"
        ],
        "license": "MIT"
      },
      "src/registrars/FIFSRegistrar.sol": {
        "keccak256": "0x5eb8a9d924f962a6348c45ac5fccef8b46ce4223058e69822eed3368fe163ba9",
        "urls": [
          "bzz-raw://7e8ba78c5f671cf01aa63093db18c09b4eb4a9b49b9648e7fdca65a7cb4b33a1",
          "dweb:/ipfs/QmeJDwCCkLE1Y4D9xYHw22BUf5XXFpyGjdCyLqW4ctk9aQ"
        ],
        "license": "MIT"
      },
      "src/security/Guard.sol": {
        "keccak256": "0x686d79efd6b053ce84e878af39223c51bbbae7338e179d7425b736743edf9294",
        "urls": [
          "bzz-raw://21ae78a51868c5bd5737cc2b26ff6cf04964d573839564a763d7f98fd0d5c0fe",
          "dweb:/ipfs/QmdAxagVagEkBDwse7QFTmmuN8iQPvGsbyMZQ8W3FQG9FQ"
        ],
        "license": "MIT"
      },
      "src/tokens/ERC20.sol": {
        "keccak256": "0xedad10777d6d0c4553311601f110cc0f7581e27712bae66dd35474da6ca87b45",
        "urls": [
          "bzz-raw://288745e26329933a0ff816f423ec0fead5c7df64a7560c14c8c0f22f3213be80",
          "dweb:/ipfs/QmbqJE9KaqC6JerrK7vqvfkngrEYL1C7F4EcDfNh2rCLqs"
        ],
        "license": "MIT"
      },
      "src/utils/OracleConsumer.sol": {
        "keccak256": "0x9b5cf6bfd9babbe490e83f5452ac7e2027aec3a7bf3438af9ff0f85fa019b144",
        "urls": [
          "bzz-raw://584d07343ef4f8b16a20fc5554180c201886e7afaf75dd8fe2735f32fe99c708",
          "dweb:/ipfs/QmamVam8nYeRamzmmH9zQ6RaXZAvbZthngyRXEdMVEyxpX"
        ],
        "license": "MIT"
      },
      "test/Paymaster.t.sol": {
        "keccak256": "0x61cca3db1ce1132e33f8a37122503a4e4467fa2c5215ea36d08ac165bda15fb5",
        "urls": [
          "bzz-raw://75d30e8aea3ad950b786659ff76747cb82e11e0f335d8c7f341bece09bfd5c44",
          "dweb:/ipfs/QmVeUPEV8rMgHYWa7EQkZKoWwynpczo883oSkV4m29Zufn"
        ],
        "license": "MIT"
      },
      "test/mocks/MocksAndContracts.sol": {
        "keccak256": "0x546cb5a72071c8d80481f1261a4d1212a58b52b6c39ee3b1ec02fcd700bbb7b3",
        "urls": [
          "bzz-raw://f12be83b8f0513352454db53efcd6bdf8c8dd3418188252823a250d83174d800",
          "dweb:/ipfs/QmVWoWU9f7Si7LY15TxioprrLhbQfyivuXXhCphurPzHcx"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Paymaster.t.sol",
    "id": 36057,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1097
      ],
      "BasePaymaster": [
        219
      ],
      "CannotUpgrade": [
        34854
      ],
      "Context": [
        32351
      ],
      "DSTest": [
        3526
      ],
      "Debt": [
        34888
      ],
      "ECDSA": [
        32946
      ],
      "ENS": [
        1234
      ],
      "ERC20Test": [
        35301
      ],
      "FIFSRegistrar": [
        35257
      ],
      "FailedToValidatedOp": [
        34820
      ],
      "Guard": [
        35266
      ],
      "HelperLibrary": [
        35191
      ],
      "IAggregator": [
        491
      ],
      "IERC20": [
        31518
      ],
      "IERC20Metadata": [
        31587
      ],
      "IEntryPoint": [
        695
      ],
      "INonceManager": [
        714
      ],
      "IPaymaster": [
        749
      ],
      "IStakeManager": [
        854
      ],
      "ISupraConsumer": [
        34808
      ],
      "IncompatibleParent": [
        34834
      ],
      "IncorrectTargetOwner": [
        34852
      ],
      "IncorrectTokenType": [
        34836
      ],
      "InsufficientAllowance": [
        34816
      ],
      "InsufficientValue": [
        34822
      ],
      "InvalidConfig": [
        34812
      ],
      "InvalidSignatureLength": [
        34824
      ],
      "LabelMismatch": [
        34842
      ],
      "LabelTooLong": [
        34848
      ],
      "LabelTooShort": [
        34844
      ],
      "Math": [
        33812
      ],
      "NameIsNotWrapped": [
        34860
      ],
      "NameIsStillExpired": [
        34862
      ],
      "NotEnoughValueForGas": [
        34818
      ],
      "OperationFailed": [
        34814
      ],
      "OperationProhibited": [
        34858
      ],
      "Ownable": [
        30677
      ],
      "Pausable": [
        30788
      ],
      "PaymasterTest": [
        36056
      ],
      "PriceFeedConsumer": [
        35518
      ],
      "ReentrancyGuard": [
        30853
      ],
      "SafeERC20": [
        31999
      ],
      "SigConfig": [
        34880
      ],
      "SigCount": [
        34872
      ],
      "SignedMath": [
        33917
      ],
      "StdAssertions": [
        5019
      ],
      "StdChains": [
        5713
      ],
      "StdCheats": [
        8125
      ],
      "StdInvariant": [
        8415
      ],
      "StdStorage": [
        9165
      ],
      "StdStyle": [
        11809
      ],
      "StdUtils": [
        12657
      ],
      "Strings": [
        32580
      ],
      "Test": [
        12706
      ],
      "TestBase": [
        3592
      ],
      "TestContract": [
        36152
      ],
      "UnAuthorized": [
        34826
      ],
      "Unauthorised": [
        34832
      ],
      "UserOperation": [
        881
      ],
      "UserOperationLib": [
        1051
      ],
      "UsernamesPaymaster": [
        34796
      ],
      "UsernamesPaymasterHarness": [
        35667
      ],
      "ValidationData": [
        228
      ],
      "Vm": [
        14212
      ],
      "_intersectTimeRange": [
        372
      ],
      "_packValidationData": [
        409,
        447
      ],
      "_parseValidationData": [
        287
      ],
      "calldataKeccak": [
        457
      ],
      "console": [
        22276
      ],
      "console2": [
        30401
      ],
      "privateKey": [
        35529
      ],
      "stdError": [
        8191
      ],
      "stdJson": [
        8991
      ],
      "stdMath": [
        9133
      ],
      "stdStorage": [
        10598
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5530:51",
    "nodes": [
      {
        "id": 35520,
        "nodeType": "PragmaDirective",
        "src": "32:23:51",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 35521,
        "nodeType": "ImportDirective",
        "src": "57:28:51",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36057,
        "sourceUnit": 12707,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35522,
        "nodeType": "ImportDirective",
        "src": "86:34:51",
        "nodes": [],
        "absolutePath": "src/Paymaster.sol",
        "file": "@usernames/Paymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36057,
        "sourceUnit": 34797,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35524,
        "nodeType": "ImportDirective",
        "src": "121:54:51",
        "nodes": [],
        "absolutePath": "src/tokens/ERC20.sol",
        "file": "@usernames/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36057,
        "sourceUnit": 35302,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35523,
              "name": "ERC20Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35301,
              "src": "129:9:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35526,
        "nodeType": "ImportDirective",
        "src": "176:57:51",
        "nodes": [],
        "absolutePath": "test/mocks/MocksAndContracts.sol",
        "file": "mocks/MocksAndContracts.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36057,
        "sourceUnit": 36441,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35525,
              "name": "TestContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36152,
              "src": "184:12:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35529,
        "nodeType": "VariableDeclaration",
        "src": "235:34:51",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "privateKey",
        "nameLocation": "249:10:51",
        "scope": 36057,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 35527,
          "name": "uint",
          "nodeType": "ElementaryTypeName",
          "src": "235:4:51",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "hexValue": "30786131316365",
          "id": 35528,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "number",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "262:7:51",
          "typeDescriptions": {
            "typeIdentifier": "t_rational_659918_by_1",
            "typeString": "int_const 659918"
          },
          "value": "0xa11ce"
        },
        "visibility": "internal"
      },
      {
        "id": 35667,
        "nodeType": "ContractDefinition",
        "src": "272:1254:51",
        "nodes": [
          {
            "id": 35548,
            "nodeType": "FunctionDefinition",
            "src": "335:125:51",
            "nodes": [],
            "body": {
              "id": 35547,
              "nodeType": "Block",
              "src": "458:2:51",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 35539,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35533,
                        "src": "430:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35538,
                      "name": "IEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "418:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IEntryPoint_$695_$",
                        "typeString": "type(contract IEntryPoint)"
                      }
                    },
                    "id": 35540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:19:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$695",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 35542,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35533,
                        "src": "443:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35541,
                      "name": "ENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1234,
                      "src": "439:3:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ENS_$1234_$",
                        "typeString": "type(contract ENS)"
                      }
                    },
                    "id": 35543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "439:11:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$1234",
                      "typeString": "contract ENS"
                    }
                  },
                  {
                    "id": 35544,
                    "name": "feed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35535,
                    "src": "452:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 35545,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 35537,
                  "name": "UsernamesPaymaster",
                  "nameLocations": [
                    "399:18:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34796,
                  "src": "399:18:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "399:58:51"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 35536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35533,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "364:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35548,
                  "src": "356:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35535,
                  "mutability": "mutable",
                  "name": "feed",
                  "nameLocation": "388:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35548,
                  "src": "380:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "346:52:51"
            },
            "returnParameters": {
              "id": 35546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:51"
            },
            "scope": 35667,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35569,
            "nodeType": "FunctionDefinition",
            "src": "466:297:51",
            "nodes": [],
            "body": {
              "id": 35568,
              "nodeType": "Block",
              "src": "678:85:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35563,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35551,
                        "src": "720:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      {
                        "id": 35564,
                        "name": "userOpHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35553,
                        "src": "728:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35565,
                        "name": "requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35555,
                        "src": "740:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35562,
                      "name": "_validatePaymasterUserOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        34481
                      ],
                      "referencedDeclaration": 34481,
                      "src": "695:24:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$881_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$",
                        "typeString": "function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"
                      }
                    },
                    "id": 35566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:61:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(bytes memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 35561,
                  "id": 35567,
                  "nodeType": "Return",
                  "src": "688:68:51"
                }
              ]
            },
            "functionSelector": "1eafffed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exposed__validatePaymasterUserOp",
            "nameLocation": "475:32:51",
            "parameters": {
              "id": 35556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35551,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "540:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35569,
                  "src": "517:29:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 35550,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35549,
                      "name": "UserOperation",
                      "nameLocations": [
                        "517:13:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 881,
                      "src": "517:13:51"
                    },
                    "referencedDeclaration": 881,
                    "src": "517:13:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35553,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "564:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35569,
                  "src": "556:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35552,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35555,
                  "mutability": "mutable",
                  "name": "requiredPreFund",
                  "nameLocation": "592:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35569,
                  "src": "584:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "507:106:51"
            },
            "returnParameters": {
              "id": 35561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35558,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "645:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35569,
                  "src": "632:20:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35557,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35560,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "662:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35569,
                  "src": "654:22:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "631:46:51"
            },
            "scope": 35667,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35586,
            "nodeType": "FunctionDefinition",
            "src": "769:182:51",
            "nodes": [],
            "body": {
              "id": 35585,
              "nodeType": "Block",
              "src": "897:54:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35580,
                        "name": "mode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35572,
                        "src": "915:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PostOpMode_$722",
                          "typeString": "enum IPaymaster.PostOpMode"
                        }
                      },
                      {
                        "id": 35581,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35574,
                        "src": "921:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 35582,
                        "name": "actualGasCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35576,
                        "src": "930:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PostOpMode_$722",
                          "typeString": "enum IPaymaster.PostOpMode"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35579,
                      "name": "_postOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        34719
                      ],
                      "referencedDeclaration": 34719,
                      "src": "907:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PostOpMode_$722_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"
                      }
                    },
                    "id": 35583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "907:37:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35584,
                  "nodeType": "ExpressionStatement",
                  "src": "907:37:51"
                }
              ]
            },
            "functionSelector": "31b3d678",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exposed__postOp",
            "nameLocation": "778:15:51",
            "parameters": {
              "id": 35577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35572,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "814:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35586,
                  "src": "803:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$722",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 35571,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35570,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "803:10:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 722,
                      "src": "803:10:51"
                    },
                    "referencedDeclaration": 722,
                    "src": "803:10:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$722",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35574,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "843:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35586,
                  "src": "828:22:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35576,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "868:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35586,
                  "src": "860:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "793:94:51"
            },
            "returnParameters": {
              "id": 35578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:0:51"
            },
            "scope": 35667,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35599,
            "nodeType": "FunctionDefinition",
            "src": "957:132:51",
            "nodes": [],
            "body": {
              "id": 35598,
              "nodeType": "Block",
              "src": "1052:37:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35595,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35589,
                        "src": "1075:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      ],
                      "id": 35594,
                      "name": "_pack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34795,
                      "src": "1069:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$881_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct UserOperation calldata) pure returns (bytes memory)"
                      }
                    },
                    "id": 35596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:13:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 35593,
                  "id": 35597,
                  "nodeType": "Return",
                  "src": "1062:20:51"
                }
              ]
            },
            "functionSelector": "9b671bcb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exposed__pack",
            "nameLocation": "966:13:51",
            "parameters": {
              "id": 35590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35589,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1003:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35599,
                  "src": "980:29:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$881_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 35588,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35587,
                      "name": "UserOperation",
                      "nameLocations": [
                        "980:13:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 881,
                      "src": "980:13:51"
                    },
                    "referencedDeclaration": 881,
                    "src": "980:13:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "979:31:51"
            },
            "returnParameters": {
              "id": 35593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35592,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1047:3:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35599,
                  "src": "1034:16:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35591,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1033:18:51"
            },
            "scope": 35667,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35666,
            "nodeType": "FunctionDefinition",
            "src": "1095:429:51",
            "nodes": [],
            "body": {
              "id": 35665,
              "nodeType": "Block",
              "src": "1215:309:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35613,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "1233:7:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35665,
                      "src": "1225:15:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 35612,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1225:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35623,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 35618,
                              "name": "context",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35601,
                              "src": "1259:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "hexValue": "3230",
                              "id": 35619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1268:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "id": 35620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "1259:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 35617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1251:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes20_$",
                            "typeString": "type(bytes20)"
                          },
                          "typeName": {
                            "id": 35616,
                            "name": "bytes20",
                            "nodeType": "ElementaryTypeName",
                            "src": "1251:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1251:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      ],
                      "id": 35615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1243:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 35614,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1243:7:51",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:30:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1225:48:51"
                },
                {
                  "assignments": [
                    35625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35625,
                      "mutability": "mutable",
                      "name": "feeToken",
                      "nameLocation": "1291:8:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35665,
                      "src": "1283:16:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 35624,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1283:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35636,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 35630,
                              "name": "context",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35601,
                              "src": "1318:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "hexValue": "3430",
                              "id": 35632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1329:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            },
                            "id": 35633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "1318:14:51",
                            "startExpression": {
                              "hexValue": "3230",
                              "id": 35631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1326:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 35629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1310:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes20_$",
                            "typeString": "type(bytes20)"
                          },
                          "typeName": {
                            "id": 35628,
                            "name": "bytes20",
                            "nodeType": "ElementaryTypeName",
                            "src": "1310:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1310:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      ],
                      "id": 35627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1302:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 35626,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1302:7:51",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:32:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1283:51:51"
                },
                {
                  "assignments": [
                    35638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35638,
                      "mutability": "mutable",
                      "name": "nodeHash",
                      "nameLocation": "1352:8:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35665,
                      "src": "1344:16:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 35637,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1344:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35645,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 35641,
                          "name": "context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35601,
                          "src": "1371:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 35643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "1371:13:51",
                        "startExpression": {
                          "hexValue": "313034",
                          "id": 35642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1379:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_104_by_1",
                            "typeString": "int_const 104"
                          },
                          "value": "104"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      ],
                      "id": 35640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1363:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 35639,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:7:51",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:22:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1344:41:51"
                },
                {
                  "assignments": [
                    35647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35647,
                      "mutability": "mutable",
                      "name": "requiredPreFund",
                      "nameLocation": "1403:15:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35665,
                      "src": "1395:23:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1395:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35658,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 35652,
                              "name": "context",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35601,
                              "src": "1437:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "hexValue": "313034",
                              "id": 35654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1448:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_104_by_1",
                                "typeString": "int_const 104"
                              },
                              "value": "104"
                            },
                            "id": 35655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "1437:15:51",
                            "startExpression": {
                              "hexValue": "3732",
                              "id": 35653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1445:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_72_by_1",
                                "typeString": "int_const 72"
                              },
                              "value": "72"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 35651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1429:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 35650,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1429:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1429:24:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 35649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1421:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 35648,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1421:7:51",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:33:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1395:59:51"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 35659,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35613,
                        "src": "1472:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35660,
                        "name": "feeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35625,
                        "src": "1481:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35661,
                        "name": "nodeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35638,
                        "src": "1491:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35662,
                        "name": "requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35647,
                        "src": "1501:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 35663,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1471:46:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(address,address,bytes32,uint256)"
                    }
                  },
                  "functionReturnParameters": 35611,
                  "id": 35664,
                  "nodeType": "Return",
                  "src": "1464:53:51"
                }
              ]
            },
            "functionSelector": "9c58ce7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeContext",
            "nameLocation": "1104:13:51",
            "parameters": {
              "id": 35602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35601,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1142:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35666,
                  "src": "1127:22:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35600,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:38:51"
            },
            "returnParameters": {
              "id": 35611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35604,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35666,
                  "src": "1179:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35666,
                  "src": "1188:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35666,
                  "src": "1197:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35607,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35666,
                  "src": "1206:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:36:51"
            },
            "scope": 35667,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35530,
              "name": "UsernamesPaymaster",
              "nameLocations": [
                "310:18:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34796,
              "src": "310:18:51"
            },
            "id": 35531,
            "nodeType": "InheritanceSpecifier",
            "src": "310:18:51"
          }
        ],
        "canonicalName": "UsernamesPaymasterHarness",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35667,
          34796,
          35266,
          30788,
          219,
          30677,
          32351,
          30853,
          749,
          35257
        ],
        "name": "UsernamesPaymasterHarness",
        "nameLocation": "281:25:51",
        "scope": 36057,
        "usedErrors": [
          34812,
          34818,
          34820,
          34824,
          34826
        ]
      },
      {
        "id": 36056,
        "nodeType": "ContractDefinition",
        "src": "1528:4033:51",
        "nodes": [
          {
            "id": 35672,
            "nodeType": "UsingForDirective",
            "src": "1565:24:51",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 35670,
              "name": "ECDSA",
              "nameLocations": [
                "1571:5:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32946,
              "src": "1571:5:51"
            },
            "typeName": {
              "id": 35671,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1581:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 35676,
            "nodeType": "UsingForDirective",
            "src": "1594:41:51",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 35673,
              "name": "UserOperationLib",
              "nameLocations": [
                "1600:16:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1051,
              "src": "1600:16:51"
            },
            "typeName": {
              "id": 35675,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35674,
                "name": "UserOperation",
                "nameLocations": [
                  "1621:13:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 881,
                "src": "1621:13:51"
              },
              "referencedDeclaration": 881,
              "src": "1621:13:51",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 35679,
            "nodeType": "VariableDeclaration",
            "src": "1641:17:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ops",
            "nameLocation": "1655:3:51",
            "scope": 36056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_UserOperation_$881_storage",
              "typeString": "struct UserOperation"
            },
            "typeName": {
              "id": 35678,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35677,
                "name": "UserOperation",
                "nameLocations": [
                  "1641:13:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 881,
                "src": "1641:13:51"
              },
              "referencedDeclaration": 881,
              "src": "1641:13:51",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$881_storage_ptr",
                "typeString": "struct UserOperation"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35685,
            "nodeType": "VariableDeclaration",
            "src": "1665:36:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tester",
            "nameLocation": "1673:6:51",
            "scope": 36056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35680,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1665:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 35683,
                  "name": "privateKey",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35529,
                  "src": "1690:10:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "expression": {
                  "id": 35681,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3585,
                  "src": "1682:2:51",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$14212",
                    "typeString": "contract Vm"
                  }
                },
                "id": 35682,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "1685:4:51",
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 12777,
                "src": "1682:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 35684,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1682:19:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35688,
            "nodeType": "VariableDeclaration",
            "src": "1708:35:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "paymaster",
            "nameLocation": "1734:9:51",
            "scope": 36056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
              "typeString": "contract UsernamesPaymasterHarness"
            },
            "typeName": {
              "id": 35687,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35686,
                "name": "UsernamesPaymasterHarness",
                "nameLocations": [
                  "1708:25:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35667,
                "src": "1708:25:51"
              },
              "referencedDeclaration": 35667,
              "src": "1708:25:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                "typeString": "contract UsernamesPaymasterHarness"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35691,
            "nodeType": "VariableDeclaration",
            "src": "1749:22:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "f6420e15",
            "mutability": "mutable",
            "name": "tc",
            "nameLocation": "1769:2:51",
            "scope": 36056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestContract_$36152",
              "typeString": "contract TestContract"
            },
            "typeName": {
              "id": 35690,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35689,
                "name": "TestContract",
                "nameLocations": [
                  "1749:12:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36152,
                "src": "1749:12:51"
              },
              "referencedDeclaration": 36152,
              "src": "1749:12:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContract_$36152",
                "typeString": "contract TestContract"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35694,
            "nodeType": "VariableDeclaration",
            "src": "1777:26:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "6895179d",
            "mutability": "mutable",
            "name": "testToken",
            "nameLocation": "1794:9:51",
            "scope": 36056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Test_$35301",
              "typeString": "contract ERC20Test"
            },
            "typeName": {
              "id": 35693,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35692,
                "name": "ERC20Test",
                "nameLocations": [
                  "1777:9:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35301,
                "src": "1777:9:51"
              },
              "referencedDeclaration": 35301,
              "src": "1777:9:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Test_$35301",
                "typeString": "contract ERC20Test"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35708,
            "nodeType": "VariableDeclaration",
            "src": "1809:77:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "testNode",
            "nameLocation": "1817:8:51",
            "scope": 36056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 35695,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1809:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 35701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1863:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 35700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1855:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 35699,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1855:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1855:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    {
                      "arguments": [
                        {
                          "hexValue": "74657374",
                          "id": 35704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1877:6:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          "value": "test"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          }
                        ],
                        "id": 35703,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1867:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 35705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1867:17:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "expression": {
                      "id": 35697,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "1838:3:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 35698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1842:12:51",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "1838:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 35706,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1838:47:51",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 35696,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1828:9:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 35707,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1828:58:51",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35721,
            "nodeType": "FunctionDefinition",
            "src": "1893:107:51",
            "nodes": [],
            "body": {
              "id": 35720,
              "nodeType": "Block",
              "src": "1954:46:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 35715,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35710,
                        "src": "1965:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 35716,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1964:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 35717,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:6:51"
                },
                {
                  "expression": {
                    "id": 35718,
                    "name": "tester",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35685,
                    "src": "1987:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35714,
                  "id": 35719,
                  "nodeType": "Return",
                  "src": "1980:13:51"
                }
              ]
            },
            "functionSelector": "02571be3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "1902:5:51",
            "parameters": {
              "id": 35711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35710,
                  "mutability": "mutable",
                  "name": "node",
                  "nameLocation": "1916:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35721,
                  "src": "1908:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35709,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1907:14:51"
            },
            "returnParameters": {
              "id": 35714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35721,
                  "src": "1945:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:9:51"
            },
            "scope": 36056,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35751,
            "nodeType": "FunctionDefinition",
            "src": "2006:214:51",
            "nodes": [],
            "body": {
              "id": 35750,
              "nodeType": "Block",
              "src": "2086:134:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35733,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35685,
                        "src": "2110:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35730,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3585,
                        "src": "2096:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14212",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2099:10:51",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13830,
                      "src": "2096:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 35734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:21:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35735,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35739,
                        "name": "signer1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35723,
                        "src": "2152:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35740,
                        "name": "signer2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35725,
                        "src": "2161:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35741,
                        "name": "testNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35708,
                        "src": "2170:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35742,
                        "name": "sigCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35727,
                        "src": "2180:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 35736,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35688,
                        "src": "2127:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                          "typeString": "contract UsernamesPaymasterHarness"
                        }
                      },
                      "id": 35738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2137:14:51",
                      "memberName": "setNodeSigners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34104,
                      "src": "2127:24:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,bytes32,uint8) external"
                      }
                    },
                    "id": 35743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:62:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35744,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:62:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35745,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3585,
                        "src": "2199:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14212",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2202:9:51",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13847,
                      "src": "2199:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 35748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:14:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35749,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:14:51"
                }
              ]
            },
            "functionSelector": "bc4a9404",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeSigners",
            "nameLocation": "2015:13:51",
            "parameters": {
              "id": 35728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35723,
                  "mutability": "mutable",
                  "name": "signer1",
                  "nameLocation": "2037:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35751,
                  "src": "2029:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2029:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35725,
                  "mutability": "mutable",
                  "name": "signer2",
                  "nameLocation": "2054:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35751,
                  "src": "2046:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35727,
                  "mutability": "mutable",
                  "name": "sigCount",
                  "nameLocation": "2069:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35751,
                  "src": "2063:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35726,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2028:50:51"
            },
            "returnParameters": {
              "id": 35729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2086:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35820,
            "nodeType": "FunctionDefinition",
            "src": "2226:395:51",
            "nodes": [],
            "body": {
              "id": 35819,
              "nodeType": "Block",
              "src": "2250:371:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35754,
                      "name": "tc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35691,
                      "src": "2260:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestContract_$36152",
                        "typeString": "contract TestContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 35757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2265:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestContract_$36152_$",
                          "typeString": "function () returns (contract TestContract)"
                        },
                        "typeName": {
                          "id": 35756,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 35755,
                            "name": "TestContract",
                            "nameLocations": [
                              "2269:12:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36152,
                            "src": "2269:12:51"
                          },
                          "referencedDeclaration": 36152,
                          "src": "2269:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestContract_$36152",
                            "typeString": "contract TestContract"
                          }
                        }
                      },
                      "id": 35758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2265:18:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestContract_$36152",
                        "typeString": "contract TestContract"
                      }
                    },
                    "src": "2260:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestContract_$36152",
                      "typeString": "contract TestContract"
                    }
                  },
                  "id": 35760,
                  "nodeType": "ExpressionStatement",
                  "src": "2260:23:51"
                },
                {
                  "expression": {
                    "id": 35766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35761,
                      "name": "testToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35694,
                      "src": "2293:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Test_$35301",
                        "typeString": "contract ERC20Test"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 35764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2305:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Test_$35301_$",
                          "typeString": "function () returns (contract ERC20Test)"
                        },
                        "typeName": {
                          "id": 35763,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 35762,
                            "name": "ERC20Test",
                            "nameLocations": [
                              "2309:9:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 35301,
                            "src": "2309:9:51"
                          },
                          "referencedDeclaration": 35301,
                          "src": "2309:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Test_$35301",
                            "typeString": "contract ERC20Test"
                          }
                        }
                      },
                      "id": 35765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2305:15:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Test_$35301",
                        "typeString": "contract ERC20Test"
                      }
                    },
                    "src": "2293:27:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Test_$35301",
                      "typeString": "contract ERC20Test"
                    }
                  },
                  "id": 35767,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:27:51"
                },
                {
                  "expression": {
                    "id": 35781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35768,
                      "name": "paymaster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35688,
                      "src": "2330:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                        "typeString": "contract UsernamesPaymasterHarness"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 35774,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2380:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PaymasterTest_$36056",
                                "typeString": "contract PaymasterTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PaymasterTest_$36056",
                                "typeString": "contract PaymasterTest"
                              }
                            ],
                            "id": 35773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2372:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35772,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2372:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2372:13:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 35778,
                              "name": "tc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35691,
                              "src": "2395:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestContract_$36152",
                                "typeString": "contract TestContract"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestContract_$36152",
                                "typeString": "contract TestContract"
                              }
                            ],
                            "id": 35777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2387:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35776,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2387:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2387:11:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2342:29:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_UsernamesPaymasterHarness_$35667_$",
                          "typeString": "function (address,address) returns (contract UsernamesPaymasterHarness)"
                        },
                        "typeName": {
                          "id": 35770,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 35769,
                            "name": "UsernamesPaymasterHarness",
                            "nameLocations": [
                              "2346:25:51"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 35667,
                            "src": "2346:25:51"
                          },
                          "referencedDeclaration": 35667,
                          "src": "2346:25:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                            "typeString": "contract UsernamesPaymasterHarness"
                          }
                        }
                      },
                      "id": 35780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2342:57:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                        "typeString": "contract UsernamesPaymasterHarness"
                      }
                    },
                    "src": "2330:69:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                      "typeString": "contract UsernamesPaymasterHarness"
                    }
                  },
                  "id": 35782,
                  "nodeType": "ExpressionStatement",
                  "src": "2330:69:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35786,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2422:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PaymasterTest_$36056",
                              "typeString": "contract PaymasterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PaymasterTest_$36056",
                              "typeString": "contract PaymasterTest"
                            }
                          ],
                          "id": 35785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2414:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2414:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2414:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32653138",
                        "id": 35788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2429:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 35783,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7734,
                        7751,
                        7874
                      ],
                      "referencedDeclaration": 7734,
                      "src": "2409:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 35789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2409:25:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35790,
                  "nodeType": "ExpressionStatement",
                  "src": "2409:25:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35796,
                        "name": "testNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35708,
                        "src": "2476:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 35791,
                          "name": "paymaster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35688,
                          "src": "2444:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                            "typeString": "contract UsernamesPaymasterHarness"
                          }
                        },
                        "id": 35793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2454:8:51",
                        "memberName": "fundNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34135,
                        "src": "2444:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32) payable external"
                        }
                      },
                      "id": 35795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653138",
                          "id": 35794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2470:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        }
                      ],
                      "src": "2444:31:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes32_$returns$__$value",
                        "typeString": "function (bytes32) payable external"
                      }
                    },
                    "id": 35797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:41:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35798,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:41:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35802,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35694,
                        "src": "2514:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Test_$35301",
                          "typeString": "contract ERC20Test"
                        }
                      },
                      {
                        "hexValue": "6269745f75736463",
                        "id": 35803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235f98dc765ac79d2100446d950a67df98d9a63feef6d324d94b8bad8c3e7859",
                          "typeString": "literal_string \"bit_usdc\""
                        },
                        "value": "bit_usdc"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Test_$35301",
                          "typeString": "contract ERC20Test"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235f98dc765ac79d2100446d950a67df98d9a63feef6d324d94b8bad8c3e7859",
                          "typeString": "literal_string \"bit_usdc\""
                        }
                      ],
                      "expression": {
                        "id": 35799,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35688,
                        "src": "2495:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                          "typeString": "contract UsernamesPaymasterHarness"
                        }
                      },
                      "id": 35801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2505:8:51",
                      "memberName": "addToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34122,
                      "src": "2495:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$31518_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,string memory) external"
                      }
                    },
                    "id": 35804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2495:41:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35805,
                  "nodeType": "ExpressionStatement",
                  "src": "2495:41:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35807,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35685,
                        "src": "2560:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35808,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35685,
                        "src": "2568:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 35811,
                              "name": "SigCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34872,
                              "src": "2582:8:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SigCount_$34872_$",
                                "typeString": "type(enum SigCount)"
                              }
                            },
                            "id": 35812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2591:4:51",
                            "memberName": "ZERO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34869,
                            "src": "2582:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SigCount_$34872",
                              "typeString": "enum SigCount"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_SigCount_$34872",
                              "typeString": "enum SigCount"
                            }
                          ],
                          "id": 35810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2576:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 35809,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "2576:5:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2576:20:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 35806,
                      "name": "changeSigners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35751,
                      "src": "2546:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,uint8)"
                      }
                    },
                    "id": 35814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:51:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35815,
                  "nodeType": "ExpressionStatement",
                  "src": "2546:51:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35816,
                      "name": "setOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35917,
                      "src": "2607:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 35817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:7:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35818,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:7:51"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2235:5:51",
            "parameters": {
              "id": 35752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2240:2:51"
            },
            "returnParameters": {
              "id": 35753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2250:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35917,
            "nodeType": "FunctionDefinition",
            "src": "2627:949:51",
            "nodes": [],
            "body": {
              "id": 35916,
              "nodeType": "Block",
              "src": "2653:923:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35826,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35685,
                        "src": "2677:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35823,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3585,
                        "src": "2663:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14212",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2666:10:51",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13830,
                      "src": "2663:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 35827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:21:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35828,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:21:51"
                },
                {
                  "assignments": [
                    35830,
                    35832,
                    35834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35830,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "2701:1:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35916,
                      "src": "2695:7:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 35829,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2695:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 35832,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2712:1:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35916,
                      "src": "2704:9:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 35831,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2704:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 35834,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2723:1:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35916,
                      "src": "2715:9:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 35833,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2715:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35842,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35837,
                        "name": "privateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35529,
                        "src": "2736:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 35838,
                            "name": "testNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35708,
                            "src": "2748:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 35839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2757:22:51",
                          "memberName": "toEthSignedMessageHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32891,
                          "src": "2748:31:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                            "typeString": "function (bytes32) pure returns (bytes32)"
                          }
                        },
                        "id": 35840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2748:33:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 35835,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3585,
                        "src": "2728:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14212",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2731:4:51",
                      "memberName": "sign",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12770,
                      "src": "2728:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bytes32_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (uint256,bytes32) pure external returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 35841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2728:54:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2694:88:51"
                },
                {
                  "assignments": [
                    35844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35844,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "2805:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35916,
                      "src": "2792:22:51",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 35843,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2792:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35851,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35847,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35832,
                        "src": "2834:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35848,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35834,
                        "src": "2837:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35849,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35830,
                        "src": "2840:1:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 35845,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2817:3:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 35846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2821:12:51",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2817:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 35850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:25:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2792:50:51"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35852,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3585,
                        "src": "2852:2:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14212",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 35854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2855:9:51",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13847,
                      "src": "2852:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 35855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2852:14:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35856,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:14:51"
                },
                {
                  "expression": {
                    "id": 35914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35857,
                      "name": "ops",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35679,
                      "src": "2876:3:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$881_storage",
                        "typeString": "struct UserOperation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35859,
                          "name": "tester",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35685,
                          "src": "2918:6:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 35862,
                              "name": "tester",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35685,
                              "src": "2957:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 35860,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3585,
                              "src": "2945:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$14212",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 35861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2948:8:51",
                            "memberName": "getNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12784,
                            "src": "2945:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint64_$",
                              "typeString": "function (address) view external returns (uint64)"
                            }
                          },
                          "id": 35863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2945:19:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2998:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2988:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 35864,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2992:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 35867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2988:12:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3034:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3024:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 35868,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3028:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 35871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:12:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3072:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3064:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 35872,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3064:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "346534",
                          "id": 35876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3110:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_40000_by_1",
                            "typeString": "int_const 40000"
                          },
                          "value": "4e4"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3155:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3147:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 35877,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3147:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3147:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "332e356534",
                          "id": 35881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3185:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          "value": "3.5e4"
                        },
                        {
                          "hexValue": "332e356534",
                          "id": 35882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3226:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          "value": "3.5e4"
                        },
                        {
                          "arguments": [
                            {
                              "id": 35885,
                              "name": "paymaster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35688,
                              "src": "3297:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                                "typeString": "contract UsernamesPaymasterHarness"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 35893,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 35890,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "3342:5:51",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 35891,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3348:9:51",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "3342:15:51",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "3836343030",
                                        "id": 35892,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3360:5:51",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        },
                                        "value": "86400"
                                      },
                                      "src": "3342:23:51",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 35889,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3335:6:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 35888,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3335:6:51",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 35894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3335:31:51",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 35897,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "3375:5:51",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 35898,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3381:9:51",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "3375:15:51",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 35896,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3368:6:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 35895,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3368:6:51",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 35899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3368:23:51",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                ],
                                "expression": {
                                  "id": 35886,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3324:3:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 35887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3328:6:51",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "3324:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 35900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3324:68:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 35901,
                              "name": "testNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35708,
                              "src": "3410:8:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 35904,
                                  "name": "testToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35694,
                                  "src": "3444:9:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Test_$35301",
                                    "typeString": "contract ERC20Test"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Test_$35301",
                                    "typeString": "contract ERC20Test"
                                  }
                                ],
                                "id": 35903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3436:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 35902,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3436:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 35905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3436:18:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 35908,
                                  "name": "signature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35844,
                                  "src": "3489:9:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 35909,
                                  "name": "signature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35844,
                                  "src": "3500:9:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 35906,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3472:3:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 35907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3476:12:51",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3472:16:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 35910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3472:38:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                                "typeString": "contract UsernamesPaymasterHarness"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 35883,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3263:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 35884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3267:12:51",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3263:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 35911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3263:261:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 35912,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35844,
                          "src": "3549:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_40000_by_1",
                            "typeString": "int_const 40000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 35858,
                        "name": "UserOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "2882:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_UserOperation_$881_storage_ptr_$",
                          "typeString": "type(struct UserOperation storage pointer)"
                        }
                      },
                      "id": 35913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2910:6:51",
                        "2938:5:51",
                        "2978:8:51",
                        "3014:8:51",
                        "3050:12:51",
                        "3088:20:51",
                        "3127:18:51",
                        "3171:12:51",
                        "3204:20:51",
                        "3245:16:51",
                        "3538:9:51"
                      ],
                      "names": [
                        "sender",
                        "nonce",
                        "initCode",
                        "callData",
                        "callGasLimit",
                        "verificationGasLimit",
                        "preVerificationGas",
                        "maxFeePerGas",
                        "maxPriorityFeePerGas",
                        "paymasterAndData",
                        "signature"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2882:687:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$881_memory_ptr",
                        "typeString": "struct UserOperation memory"
                      }
                    },
                    "src": "2876:693:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$881_storage",
                      "typeString": "struct UserOperation storage ref"
                    }
                  },
                  "id": 35915,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:693:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOp",
            "nameLocation": "2636:5:51",
            "parameters": {
              "id": 35821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:2:51"
            },
            "returnParameters": {
              "id": 35822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2653:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35921,
            "nodeType": "FunctionDefinition",
            "src": "3639:58:51",
            "nodes": [],
            "body": {
              "id": 35920,
              "nodeType": "Block",
              "src": "3695:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "e5a82f64",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevertsOnInvalidSignatureLength",
            "nameLocation": "3648:35:51",
            "parameters": {
              "id": 35918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3683:2:51"
            },
            "returnParameters": {
              "id": 35919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3695:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35925,
            "nodeType": "FunctionDefinition",
            "src": "3703:56:51",
            "nodes": [],
            "body": {
              "id": 35924,
              "nodeType": "Block",
              "src": "3757:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "d8adce3e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevertsIfRequiredPrefundIsLow",
            "nameLocation": "3712:33:51",
            "parameters": {
              "id": 35922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3745:2:51"
            },
            "returnParameters": {
              "id": 35923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3757:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35929,
            "nodeType": "FunctionDefinition",
            "src": "3765:49:51",
            "nodes": [],
            "body": {
              "id": 35928,
              "nodeType": "Block",
              "src": "3812:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "b8c4fe4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevertsIfConfigsNotSet",
            "nameLocation": "3774:26:51",
            "parameters": {
              "id": 35926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3800:2:51"
            },
            "returnParameters": {
              "id": 35927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3812:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35933,
            "nodeType": "FunctionDefinition",
            "src": "3820:72:51",
            "nodes": [],
            "body": {
              "id": 35932,
              "nodeType": "Block",
              "src": "3890:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "442f92a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevertsIfVerificationGasLimitISLessThanPostOp",
            "nameLocation": "3829:49:51",
            "parameters": {
              "id": 35930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3878:2:51"
            },
            "returnParameters": {
              "id": 35931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3890:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35937,
            "nodeType": "FunctionDefinition",
            "src": "3898:63:51",
            "nodes": [],
            "body": {
              "id": 35936,
              "nodeType": "Block",
              "src": "3959:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "b192dfba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevertsWithIncorrectPaymasterAndData",
            "nameLocation": "3907:40:51",
            "parameters": {
              "id": 35934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3947:2:51"
            },
            "returnParameters": {
              "id": 35935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3959:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35941,
            "nodeType": "FunctionDefinition",
            "src": "3967:57:51",
            "nodes": [],
            "body": {
              "id": 35940,
              "nodeType": "Block",
              "src": "4022:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "f7b6eb1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevertsIfTokenPairDoesNotExist",
            "nameLocation": "3976:34:51",
            "parameters": {
              "id": 35938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4010:2:51"
            },
            "returnParameters": {
              "id": 35939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4022:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35945,
            "nodeType": "FunctionDefinition",
            "src": "4030:58:51",
            "nodes": [],
            "body": {
              "id": 35944,
              "nodeType": "Block",
              "src": "4086:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "126d9f49",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDebtIsCachedForInitialOperation",
            "nameLocation": "4039:35:51",
            "parameters": {
              "id": 35942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4074:2:51"
            },
            "returnParameters": {
              "id": 35943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4086:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35949,
            "nodeType": "FunctionDefinition",
            "src": "4094:59:51",
            "nodes": [],
            "body": {
              "id": 35948,
              "nodeType": "Block",
              "src": "4151:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "012af56e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDebtMustBePaidForSecondOperation",
            "nameLocation": "4103:36:51",
            "parameters": {
              "id": 35946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4139:2:51"
            },
            "returnParameters": {
              "id": 35947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4151:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35953,
            "nodeType": "FunctionDefinition",
            "src": "4159:57:51",
            "nodes": [],
            "body": {
              "id": 35952,
              "nodeType": "Block",
              "src": "4214:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "6118fb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCannotUseNodeHashOtherThanSelf",
            "nameLocation": "4168:34:51",
            "parameters": {
              "id": 35950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4202:2:51"
            },
            "returnParameters": {
              "id": 35951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4214:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35957,
            "nodeType": "FunctionDefinition",
            "src": "4222:67:51",
            "nodes": [],
            "body": {
              "id": 35956,
              "nodeType": "Block",
              "src": "4287:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "ab27dc78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testZeroSigCountPassesWithOrWithoutSigLength",
            "nameLocation": "4231:44:51",
            "parameters": {
              "id": 35954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4275:2:51"
            },
            "returnParameters": {
              "id": 35955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4287:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35961,
            "nodeType": "FunctionDefinition",
            "src": "4295:60:51",
            "nodes": [],
            "body": {
              "id": 35960,
              "nodeType": "Block",
              "src": "4353:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "cae30565",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOneSigCountPassesOnValidSignature",
            "nameLocation": "4304:37:51",
            "parameters": {
              "id": 35958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4341:2:51"
            },
            "returnParameters": {
              "id": 35959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4353:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35965,
            "nodeType": "FunctionDefinition",
            "src": "4361:64:51",
            "nodes": [],
            "body": {
              "id": 35964,
              "nodeType": "Block",
              "src": "4423:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "1b202d78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOneSigCountFailsForAnInvalidSignature",
            "nameLocation": "4370:41:51",
            "parameters": {
              "id": 35962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4411:2:51"
            },
            "returnParameters": {
              "id": 35963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4423:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35969,
            "nodeType": "FunctionDefinition",
            "src": "4431:60:51",
            "nodes": [],
            "body": {
              "id": 35968,
              "nodeType": "Block",
              "src": "4489:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "babdef99",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTwoSigCountPassesOnValidSignature",
            "nameLocation": "4440:37:51",
            "parameters": {
              "id": 35966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4477:2:51"
            },
            "returnParameters": {
              "id": 35967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4489:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35973,
            "nodeType": "FunctionDefinition",
            "src": "4497:64:51",
            "nodes": [],
            "body": {
              "id": 35972,
              "nodeType": "Block",
              "src": "4559:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "ca6ab891",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTwoSigCountFailsForAnInvalidSignature",
            "nameLocation": "4506:41:51",
            "parameters": {
              "id": 35970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4547:2:51"
            },
            "returnParameters": {
              "id": 35971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4559:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36035,
            "nodeType": "FunctionDefinition",
            "src": "4567:649:51",
            "nodes": [],
            "body": {
              "id": 36034,
              "nodeType": "Block",
              "src": "4625:591:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35977,
                      "mutability": "mutable",
                      "name": "userOpHash",
                      "nameLocation": "4643:10:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36034,
                      "src": "4635:18:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 35976,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4635:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35984,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35981,
                            "name": "ops",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35679,
                            "src": "4690:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$881_storage",
                              "typeString": "struct UserOperation storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_UserOperation_$881_storage",
                              "typeString": "struct UserOperation storage ref"
                            }
                          ],
                          "expression": {
                            "id": 35979,
                            "name": "paymaster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35688,
                            "src": "4666:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                              "typeString": "contract UsernamesPaymasterHarness"
                            }
                          },
                          "id": 35980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4676:13:51",
                          "memberName": "exposed__pack",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35599,
                          "src": "4666:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_struct$_UserOperation_$881_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct UserOperation memory) pure external returns (bytes memory)"
                          }
                        },
                        "id": 35982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4666:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 35978,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4656:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 35983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4656:39:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4635:60:51"
                },
                {
                  "assignments": [
                    35986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35986,
                      "mutability": "mutable",
                      "name": "_requiredPreFund",
                      "nameLocation": "4713:16:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36034,
                      "src": "4705:24:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35985,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4705:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35988,
                  "initialValue": {
                    "hexValue": "3231303030",
                    "id": 35987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4732:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21000_by_1",
                      "typeString": "int_const 21000"
                    },
                    "value": "21000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4705:32:51"
                },
                {
                  "assignments": [
                    35990,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35990,
                      "mutability": "mutable",
                      "name": "context",
                      "nameLocation": "4762:7:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36034,
                      "src": "4749:20:51",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 35989,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4749:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 35997,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35993,
                        "name": "ops",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35679,
                        "src": "4831:3:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$881_storage",
                          "typeString": "struct UserOperation storage ref"
                        }
                      },
                      {
                        "id": 35994,
                        "name": "userOpHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35977,
                        "src": "4848:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35995,
                        "name": "_requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35986,
                        "src": "4872:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserOperation_$881_storage",
                          "typeString": "struct UserOperation storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 35991,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35688,
                        "src": "4775:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                          "typeString": "contract UsernamesPaymasterHarness"
                        }
                      },
                      "id": 35992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4785:32:51",
                      "memberName": "exposed__validatePaymasterUserOp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35569,
                      "src": "4775:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_UserOperation_$881_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$",
                        "typeString": "function (struct UserOperation memory,bytes32,uint256) external returns (bytes memory,uint256)"
                      }
                    },
                    "id": 35996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4775:123:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(bytes memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4748:150:51"
                },
                {
                  "assignments": [
                    35999,
                    36001,
                    36003,
                    36005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35999,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "4917:7:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36034,
                      "src": "4909:15:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 35998,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4909:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36001,
                      "mutability": "mutable",
                      "name": "feeToken",
                      "nameLocation": "4934:8:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36034,
                      "src": "4926:16:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36000,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4926:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36003,
                      "mutability": "mutable",
                      "name": "nodeHash",
                      "nameLocation": "4952:8:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36034,
                      "src": "4944:16:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 36002,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4944:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36005,
                      "mutability": "mutable",
                      "name": "requiredPreFund",
                      "nameLocation": "4970:15:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36034,
                      "src": "4962:23:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36004,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4962:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36010,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36008,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35990,
                        "src": "5026:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 36006,
                        "name": "paymaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35688,
                        "src": "4989:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UsernamesPaymasterHarness_$35667",
                          "typeString": "contract UsernamesPaymasterHarness"
                        }
                      },
                      "id": 36007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5012:13:51",
                      "memberName": "decodeContext",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35666,
                      "src": "4989:36:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$",
                        "typeString": "function (bytes memory) pure external returns (address,address,bytes32,uint256)"
                      }
                    },
                    "id": 36009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4989:45:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(address,address,bytes32,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4908:126:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36012,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35999,
                        "src": "5054:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36013,
                        "name": "tester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35685,
                        "src": "5063:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36011,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3720,
                        3745,
                        3758,
                        3774,
                        3816,
                        3858,
                        3900,
                        3937,
                        3974,
                        4011,
                        1555,
                        1580,
                        1610,
                        1635,
                        1694,
                        1719,
                        1749,
                        1774,
                        3247,
                        3282
                      ],
                      "referencedDeclaration": 1555,
                      "src": "5045:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 36014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5045:25:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36015,
                  "nodeType": "ExpressionStatement",
                  "src": "5045:25:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36017,
                        "name": "feeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36001,
                        "src": "5089:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 36020,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35694,
                            "src": "5107:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Test_$35301",
                              "typeString": "contract ERC20Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Test_$35301",
                              "typeString": "contract ERC20Test"
                            }
                          ],
                          "id": 36019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5099:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 36018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5099:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 36021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5099:18:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36016,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3720,
                        3745,
                        3758,
                        3774,
                        3816,
                        3858,
                        3900,
                        3937,
                        3974,
                        4011,
                        1555,
                        1580,
                        1610,
                        1635,
                        1694,
                        1719,
                        1749,
                        1774,
                        3247,
                        3282
                      ],
                      "referencedDeclaration": 1555,
                      "src": "5080:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 36022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:38:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36023,
                  "nodeType": "ExpressionStatement",
                  "src": "5080:38:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36025,
                        "name": "nodeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36003,
                        "src": "5137:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 36026,
                        "name": "testNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35708,
                        "src": "5147:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 36024,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3720,
                        3745,
                        3758,
                        3774,
                        3816,
                        3858,
                        3900,
                        3937,
                        3974,
                        4011,
                        1555,
                        1580,
                        1610,
                        1635,
                        1694,
                        1719,
                        1749,
                        1774,
                        3247,
                        3282
                      ],
                      "referencedDeclaration": 1610,
                      "src": "5128:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 36027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5128:28:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36028,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:28:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36030,
                        "name": "requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36005,
                        "src": "5175:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 36031,
                        "name": "_requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35986,
                        "src": "5192:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 36029,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3720,
                        3745,
                        3758,
                        3774,
                        3816,
                        3858,
                        3900,
                        3937,
                        3974,
                        4011,
                        1555,
                        1580,
                        1610,
                        1635,
                        1694,
                        1719,
                        1749,
                        1774,
                        3247,
                        3282
                      ],
                      "referencedDeclaration": 1749,
                      "src": "5166:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 36032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5166:43:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36033,
                  "nodeType": "ExpressionStatement",
                  "src": "5166:43:51"
                }
              ]
            },
            "functionSelector": "4617e6fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPaymasterAndDataIsProperlyDecoded",
            "nameLocation": "4576:37:51",
            "parameters": {
              "id": 35974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4613:2:51"
            },
            "returnParameters": {
              "id": 35975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4625:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36039,
            "nodeType": "FunctionDefinition",
            "src": "5262:51:51",
            "nodes": [],
            "body": {
              "id": 36038,
              "nodeType": "Block",
              "src": "5311:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "fe280490",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDebtIsCachedOnRevertMode",
            "nameLocation": "5271:28:51",
            "parameters": {
              "id": 36036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5299:2:51"
            },
            "returnParameters": {
              "id": 36037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5311:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36043,
            "nodeType": "FunctionDefinition",
            "src": "5319:59:51",
            "nodes": [],
            "body": {
              "id": 36042,
              "nodeType": "Block",
              "src": "5376:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "a41017be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNodeGetsChargedForRevertedPostOp",
            "nameLocation": "5328:36:51",
            "parameters": {
              "id": 36040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5364:2:51"
            },
            "returnParameters": {
              "id": 36041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5376:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36047,
            "nodeType": "FunctionDefinition",
            "src": "5384:57:51",
            "nodes": [],
            "body": {
              "id": 36046,
              "nodeType": "Block",
              "src": "5439:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "7c7e3419",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenIsTransferredOnNormalMode",
            "nameLocation": "5393:34:51",
            "parameters": {
              "id": 36044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:2:51"
            },
            "returnParameters": {
              "id": 36045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5439:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36051,
            "nodeType": "FunctionDefinition",
            "src": "5447:48:51",
            "nodes": [],
            "body": {
              "id": 36050,
              "nodeType": "Block",
              "src": "5493:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "3fc5eb25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNodeIsDebitedOnPostOp",
            "nameLocation": "5456:25:51",
            "parameters": {
              "id": 36048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5481:2:51"
            },
            "returnParameters": {
              "id": 36049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5493:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36055,
            "nodeType": "FunctionDefinition",
            "src": "5501:58:51",
            "nodes": [],
            "body": {
              "id": 36054,
              "nodeType": "Block",
              "src": "5557:2:51",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "6e218f5c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectPriceIsFetchedFromOracle",
            "nameLocation": "5510:35:51",
            "parameters": {
              "id": 36052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5545:2:51"
            },
            "returnParameters": {
              "id": 36053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5557:0:51"
            },
            "scope": 36056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35668,
              "name": "Test",
              "nameLocations": [
                "1554:4:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12706,
              "src": "1554:4:51"
            },
            "id": 35669,
            "nodeType": "InheritanceSpecifier",
            "src": "1554:4:51"
          }
        ],
        "canonicalName": "PaymasterTest",
        "contractDependencies": [
          35301,
          35667,
          36152
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36056,
          12706,
          3592,
          3589,
          12657,
          8415,
          8125,
          7446,
          5713,
          5019,
          3526
        ],
        "name": "PaymasterTest",
        "nameLocation": "1537:13:51",
        "scope": 36057,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 51
}