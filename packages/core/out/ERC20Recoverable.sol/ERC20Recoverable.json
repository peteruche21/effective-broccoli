{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361031a90816100618239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c80635d3590d514610192578063715018a6146101355780638da5cb5b1461010e5763f2fde38b1461004b57600080fd5b3461010a57602036600319011261010a57610064610271565b61006c61028c565b6001600160a01b039081169182156100b8575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5080fd5b503461010a578160031936011261010a57905490516001600160a01b039091168152602090f35b823461018f578060031936011261018f5761014e61028c565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461010a57606036600319011261010a576101ac610271565b6001600160a01b039190602435838116919082900361026d5760446020926101d261028c565b868551968794859363a9059cbb60e01b8552600485015284356024850152165af1801561026357610201578280f35b6020903d821161025b575b601f8201601f191683019067ffffffffffffffff821184831017610247575260209082018290031261010a57518015150361018f5738808280f35b634e487b7160e01b85526041600452602485fd5b3d915061020c565b81513d85823e3d90fd5b8480fd5b600435906001600160a01b038216820361028757565b600080fd5b6000546001600160a01b031633036102a057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122042050046204b12c2f8549902c158b2a1030ab2e93a5520f3e9eceef4e4a1300664736f6c63430008110033",
    "sourceMap": "271:535:35:-:0;;;;;;;2518:6:60;271:535:35;;719:10:85;-1:-1:-1;;;;;;271:535:35;;;;;;719:10:85;-1:-1:-1;;;;;271:535:35;;;;2566:40:60;;2518:6;2566:40;271:535:35;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x604060808152600436101561001357600080fd5b600090813560e01c80635d3590d514610192578063715018a6146101355780638da5cb5b1461010e5763f2fde38b1461004b57600080fd5b3461010a57602036600319011261010a57610064610271565b61006c61028c565b6001600160a01b039081169182156100b8575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5080fd5b503461010a578160031936011261010a57905490516001600160a01b039091168152602090f35b823461018f578060031936011261018f5761014e61028c565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461010a57606036600319011261010a576101ac610271565b6001600160a01b039190602435838116919082900361026d5760446020926101d261028c565b868551968794859363a9059cbb60e01b8552600485015284356024850152165af1801561026357610201578280f35b6020903d821161025b575b601f8201601f191683019067ffffffffffffffff821184831017610247575260209082018290031261010a57518015150361018f5738808280f35b634e487b7160e01b85526041600452602485fd5b3d915061020c565b81513d85823e3d90fd5b8480fd5b600435906001600160a01b038216820361028757565b600080fd5b6000546001600160a01b031633036102a057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122042050046204b12c2f8549902c158b2a1030ab2e93a5520f3e9eceef4e4a1300664736f6c63430008110033",
    "sourceMap": "271:535:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;271:535:35;;;;;;:::i;:::-;1063:62:60;;:::i;:::-;-1:-1:-1;;;;;271:535:35;;;;2162:22:60;;271:535:35;;-1:-1:-1;271:535:35;;-1:-1:-1;;;;;;271:535:35;;;;;;;2566:40:60;271:535:35;;2566:40:60;271:535:35;;;;-1:-1:-1;;;271:535:35;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:535:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;271:535:35;;;;;;;;;;;;;;;;;;;;;1063:62:60;;:::i;:::-;271:535:35;;-1:-1:-1;;;;;;271:535:35;;;;;;-1:-1:-1;;;;;271:535:35;2566:40:60;271:535:35;;2566:40:60;271:535:35;;;;;;;;;;;;-1:-1:-1;;271:535:35;;;;;;:::i;:::-;-1:-1:-1;;;;;271:535:35;;;;;;;;;;;;;;;;1063:62:60;;;:::i;:::-;271:535:35;;;;;;;;;;;760:37;;271:535;760:37;;271:535;;;;;;;;760:37;;;;;;;;271:535;;;760:37;271:535;760:37;;;;;;;271:535;;;-1:-1:-1;;271:535:35;;;;;;;;;;;;;;;760:37;;;271:535;;;;;;;;;;;;;760:37;;271:535;;;;-1:-1:-1;;;271:535:35;;;;;;;;760:37;;;-1:-1:-1;760:37:35;;;271:535;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;271:535:35;;;;;;:::o;:::-;;;;1359:130:60;1273:6;271:535:35;-1:-1:-1;;;;;271:535:35;719:10:85;1422:23:60;271:535:35;;1359:130:60:o;271:535:35:-;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "owner()": "8da5cb5b",
    "recoverFunds(address,address,uint256)": "5d3590d5",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverFunds(address,address,uint256)\":{\"details\":\"The contract is Ownable and only the owner can call the recover function.\",\"params\":{\"_amount\":\"The amount of tokens to recover.\",\"_to\":\"The address to send the tokens to.\",\"_token\":\"The address of the ERC20 token to recover\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recoverFunds(address,address,uint256)\":{\"notice\":\"Recover ERC20 tokens sent to the contract by mistake.\"}},\"notice\":\"Contract is used to recover ERC20 tokens sent to the contract by mistake.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/ens-contracts/contracts/utils/ERC20Recoverable.sol\":\"ERC20Recoverable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aa/=lib/account-abstraction/\",\":@chainlink/=lib/chainlink-brownie-contracts/\",\":@ens/contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@usernames/=src/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":mocks/=test/mocks/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/ens-contracts/contracts/utils/ERC20Recoverable.sol\":{\"keccak256\":\"0x793a38091e1f81499a29ddba82c2b2f3cdd07071b81a832886e8e02a45ff352a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d435f84b1d03daa8a934967d6b01246548b52441c108e48e0fd6a7ade4a0c7\",\"dweb:/ipfs/QmQZX6rurGhMqJuH1GjZ7QC8a8Gvtn2rVBmKwdbM9GPnNb\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recoverFunds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "recoverFunds(address,address,uint256)": {
            "details": "The contract is Ownable and only the owner can call the recover function.",
            "params": {
              "_amount": "The amount of tokens to recover.",
              "_to": "The address to send the tokens to.",
              "_token": "The address of the ERC20 token to recover"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "recoverFunds(address,address,uint256)": {
            "notice": "Recover ERC20 tokens sent to the contract by mistake."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aa/=lib/account-abstraction/",
        ":@chainlink/=lib/chainlink-brownie-contracts/",
        ":@ens/contracts/=lib/ens-contracts/contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@usernames/=src/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":mocks/=test/mocks/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/ens-contracts/contracts/utils/ERC20Recoverable.sol": "ERC20Recoverable"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/ens-contracts/contracts/utils/ERC20Recoverable.sol": {
        "keccak256": "0x793a38091e1f81499a29ddba82c2b2f3cdd07071b81a832886e8e02a45ff352a",
        "urls": [
          "bzz-raw://41d435f84b1d03daa8a934967d6b01246548b52441c108e48e0fd6a7ade4a0c7",
          "dweb:/ipfs/QmQZX6rurGhMqJuH1GjZ7QC8a8Gvtn2rVBmKwdbM9GPnNb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/ens-contracts/contracts/utils/ERC20Recoverable.sol",
    "id": 6671,
    "exportedSymbols": {
      "Context": [
        41327
      ],
      "ERC20Recoverable": [
        6670
      ],
      "IERC20": [
        39386
      ],
      "Ownable": [
        37737
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:776:35",
    "nodes": [
      {
        "id": 6643,
        "nodeType": "PragmaDirective",
        "src": "31:32:35",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".17",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 6644,
        "nodeType": "ImportDirective",
        "src": "65:52:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6671,
        "sourceUnit": 37738,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6645,
        "nodeType": "ImportDirective",
        "src": "118:56:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6671,
        "sourceUnit": 39387,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6670,
        "nodeType": "ContractDefinition",
        "src": "271:535:35",
        "nodes": [
          {
            "id": 6669,
            "nodeType": "FunctionDefinition",
            "src": "633:171:35",
            "nodes": [],
            "body": {
              "id": 6668,
              "nodeType": "Block",
              "src": "750:54:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6664,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6653,
                        "src": "784:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6665,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6655,
                        "src": "789:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6661,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6651,
                            "src": "767:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6660,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39386,
                          "src": "760:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$39386_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "760:14:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$39386",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "775:8:35",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39353,
                      "src": "760:23:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:37:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6667,
                  "nodeType": "ExpressionStatement",
                  "src": "760:37:35"
                }
              ]
            },
            "documentation": {
              "id": 6649,
              "nodeType": "StructuredDocumentation",
              "src": "314:314:35",
              "text": "@notice Recover ERC20 tokens sent to the contract by mistake.\n@dev The contract is Ownable and only the owner can call the recover function.\n@param _to The address to send the tokens to.\n@param _token The address of the ERC20 token to recover\n@param _amount The amount of tokens to recover."
            },
            "functionSelector": "5d3590d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6657,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "740:9:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37656,
                  "src": "740:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "740:9:35"
              }
            ],
            "name": "recoverFunds",
            "nameLocation": "642:12:35",
            "parameters": {
              "id": 6656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6651,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "672:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6669,
                  "src": "664:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6653,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "696:3:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6669,
                  "src": "688:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6655,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "717:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6669,
                  "src": "709:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:76:35"
            },
            "returnParameters": {
              "id": 6659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:35"
            },
            "scope": 6670,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6647,
              "name": "Ownable",
              "nameLocations": [
                "300:7:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37737,
              "src": "300:7:35"
            },
            "id": 6648,
            "nodeType": "InheritanceSpecifier",
            "src": "300:7:35"
          }
        ],
        "canonicalName": "ERC20Recoverable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6646,
          "nodeType": "StructuredDocumentation",
          "src": "176:93:35",
          "text": "@notice Contract is used to recover ERC20 tokens sent to the contract by mistake."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6670,
          37737,
          41327
        ],
        "name": "ERC20Recoverable",
        "nameLocation": "280:16:35",
        "scope": 6671,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 35
}