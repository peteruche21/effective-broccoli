{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "ControllerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361030490816100618239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c8063715018a6146101fe5780638da5cb5b146101d7578063da8c229e1461019a578063e0dba60f146101195763f2fde38b1461005657600080fd5b346101155760203660031901126101155761006f61025b565b610077610276565b6001600160a01b039081169182156100c3575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5080fd5b503461011557806003193601126101155761013261025b565b60243590811515809203610196577f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf879160209161016d610276565b6001600160a01b031680865260018352848620805460ff191660ff84161790559351908152a280f35b8380fd5b50346101155760203660031901126101155760209160ff9082906001600160a01b036101c461025b565b1681526001855220541690519015158152f35b5034610115578160031936011261011557905490516001600160a01b039091168152602090f35b8234610258578060031936011261025857610217610276565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b600435906001600160a01b038216820361027157565b600080fd5b6000546001600160a01b0316330361028a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122030b97bf12257fa7db7247bbbc5bdcabe25c669131e9e764c1a38f3c73fb6879b64736f6c63430008110033",
    "sourceMap": "111:506:37:-:0;;;;;;;2518:6:60;111:506:37;;719:10:85;-1:-1:-1;;;;;;111:506:37;;;;;;719:10:85;-1:-1:-1;;;;;111:506:37;;;;2566:40:60;;2518:6;2566:40;111:506:37;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x604060808152600436101561001357600080fd5b600090813560e01c8063715018a6146101fe5780638da5cb5b146101d7578063da8c229e1461019a578063e0dba60f146101195763f2fde38b1461005657600080fd5b346101155760203660031901126101155761006f61025b565b610077610276565b6001600160a01b039081169182156100c3575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5080fd5b503461011557806003193601126101155761013261025b565b60243590811515809203610196577f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf879160209161016d610276565b6001600160a01b031680865260018352848620805460ff191660ff84161790559351908152a280f35b8380fd5b50346101155760203660031901126101155760209160ff9082906001600160a01b036101c461025b565b1681526001855220541690519015158152f35b5034610115578160031936011261011557905490516001600160a01b039091168152602090f35b8234610258578060031936011261025857610217610276565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b600435906001600160a01b038216820361027157565b600080fd5b6000546001600160a01b0316330361028a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122030b97bf12257fa7db7247bbbc5bdcabe25c669131e9e764c1a38f3c73fb6879b64736f6c63430008110033",
    "sourceMap": "111:506:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;111:506:37;;;;;;:::i;:::-;1063:62:60;;:::i;:::-;-1:-1:-1;;;;;111:506:37;;;;2162:22:60;;111:506:37;;-1:-1:-1;111:506:37;;-1:-1:-1;;;;;;111:506:37;;;;;;;2566:40:60;111:506:37;;2566:40:60;111:506:37;;;;-1:-1:-1;;;111:506:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;111:506:37;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;401:37;1063:62:60;111:506:37;1063:62:60;;;:::i;:::-;-1:-1:-1;;;;;111:506:37;;;;;;;;;;;;-1:-1:-1;;111:506:37;;;;;;;;;;;;401:37;111:506;;;;;;;;;;;;;-1:-1:-1;;111:506:37;;;;;;;;;;-1:-1:-1;;;;;111:506:37;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;111:506:37;;;;;;;;;;;;;;;;;;;;;1063:62:60;;:::i;:::-;111:506:37;;-1:-1:-1;;;;;;111:506:37;;;;;;-1:-1:-1;;;;;111:506:37;2566:40:60;111:506:37;;2566:40:60;111:506:37;;;;;;;;;-1:-1:-1;;;;;111:506:37;;;;;;:::o;:::-;;;;1359:130:60;1273:6;111:506:37;-1:-1:-1;;;;;111:506:37;719:10:85;1422:23:60;111:506:37;;1359:130:60:o;111:506:37:-;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "controllers(address)": "da8c229e",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setController(address,bool)": "e0dba60f",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/ens-contracts/contracts/wrapper/Controllable.sol\":\"Controllable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aa/=lib/account-abstraction/\",\":@chainlink/=lib/chainlink-brownie-contracts/\",\":@ens/contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@usernames/=src/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":mocks/=test/mocks/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/ens-contracts/contracts/wrapper/Controllable.sol\":{\"keccak256\":\"0x9a9191656a82eda6763cda29ce893ddbfddb6c43559ff3b90c00a184e14e1fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e62f72db49a31b27ecb0ced7b66807c68c759be0e0a2b186b0a259c7b38bbc3c\",\"dweb:/ipfs/QmS1S93ApCFfSUk9h7R9zirzN2P9ZexkjktargHC3n3GBS\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ControllerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "controllers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setController"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aa/=lib/account-abstraction/",
        ":@chainlink/=lib/chainlink-brownie-contracts/",
        ":@ens/contracts/=lib/ens-contracts/contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@usernames/=src/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":mocks/=test/mocks/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/ens-contracts/contracts/wrapper/Controllable.sol": "Controllable"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/ens-contracts/contracts/wrapper/Controllable.sol": {
        "keccak256": "0x9a9191656a82eda6763cda29ce893ddbfddb6c43559ff3b90c00a184e14e1fa1",
        "urls": [
          "bzz-raw://e62f72db49a31b27ecb0ced7b66807c68c759be0e0a2b186b0a259c7b38bbc3c",
          "dweb:/ipfs/QmS1S93ApCFfSUk9h7R9zirzN2P9ZexkjktargHC3n3GBS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/ens-contracts/contracts/wrapper/Controllable.sol",
    "id": 6863,
    "exportedSymbols": {
      "Context": [
        41327
      ],
      "Controllable": [
        6862
      ],
      "Ownable": [
        37737
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:587:37",
    "nodes": [
      {
        "id": 6815,
        "nodeType": "PragmaDirective",
        "src": "31:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "~",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 6816,
        "nodeType": "ImportDirective",
        "src": "57:52:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6863,
        "sourceUnit": 37738,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6862,
        "nodeType": "ContractDefinition",
        "src": "111:506:37",
        "nodes": [
          {
            "id": 6822,
            "nodeType": "VariableDeclaration",
            "src": "150:43:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "da8c229e",
            "mutability": "mutable",
            "name": "controllers",
            "nameLocation": "182:11:37",
            "scope": 6862,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6821,
              "keyType": {
                "id": 6819,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "150:24:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 6820,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "169:4:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 6828,
            "nodeType": "EventDefinition",
            "src": "200:65:37",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87",
            "name": "ControllerChanged",
            "nameLocation": "206:17:37",
            "parameters": {
              "id": 6827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6824,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "240:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "224:26:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6826,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "257:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 6828,
                  "src": "252:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6825,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "223:41:37"
            }
          },
          {
            "id": 6849,
            "nodeType": "FunctionDefinition",
            "src": "271:174:37",
            "nodes": [],
            "body": {
              "id": 6848,
              "nodeType": "Block",
              "src": "344:101:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6837,
                        "name": "controllers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6822,
                        "src": "354:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6839,
                      "indexExpression": {
                        "id": 6838,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6830,
                        "src": "366:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "354:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6840,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6832,
                      "src": "380:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "354:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6842,
                  "nodeType": "ExpressionStatement",
                  "src": "354:32:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6844,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6830,
                        "src": "419:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6845,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6832,
                        "src": "431:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6843,
                      "name": "ControllerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6828,
                      "src": "401:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 6846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6847,
                  "nodeType": "EmitStatement",
                  "src": "396:42:37"
                }
              ]
            },
            "functionSelector": "e0dba60f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6835,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6834,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "334:9:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37656,
                  "src": "334:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "334:9:37"
              }
            ],
            "name": "setController",
            "nameLocation": "280:13:37",
            "parameters": {
              "id": 6833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6830,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "302:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 6849,
                  "src": "294:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6832,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "319:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 6849,
                  "src": "314:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6831,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:33:37"
            },
            "returnParameters": {
              "id": 6836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:37"
            },
            "scope": 6862,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6861,
            "nodeType": "ModifierDefinition",
            "src": "451:164:37",
            "nodes": [],
            "body": {
              "id": 6860,
              "nodeType": "Block",
              "src": "477:138:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 6852,
                          "name": "controllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6822,
                          "src": "508:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 6855,
                        "indexExpression": {
                          "expression": {
                            "id": 6853,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "520:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "524:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "520:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "508:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f6e74726f6c6c6572",
                        "id": 6856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "545:42:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b",
                          "typeString": "literal_string \"Controllable: Caller is not a controller\""
                        },
                        "value": "Controllable: Caller is not a controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a494915be969f0305371ebdb09944c6f39346fa8227994f38a7231f6aafbd7b",
                          "typeString": "literal_string \"Controllable: Caller is not a controller\""
                        }
                      ],
                      "id": 6851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "487:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:110:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6858,
                  "nodeType": "ExpressionStatement",
                  "src": "487:110:37"
                },
                {
                  "id": 6859,
                  "nodeType": "PlaceholderStatement",
                  "src": "607:1:37"
                }
              ]
            },
            "name": "onlyController",
            "nameLocation": "460:14:37",
            "parameters": {
              "id": 6850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:2:37"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6817,
              "name": "Ownable",
              "nameLocations": [
                "136:7:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37737,
              "src": "136:7:37"
            },
            "id": 6818,
            "nodeType": "InheritanceSpecifier",
            "src": "136:7:37"
          }
        ],
        "canonicalName": "Controllable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6862,
          37737,
          41327
        ],
        "name": "Controllable",
        "nameLocation": "120:12:37",
        "scope": 6863,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 37
}